{"version":3,"sources":["modules/user/types.ts","api/auth-mock.ts","modules/user/actions.ts","utils/schemas.ts","components/pages/login-page/sign-up-form.tsx","components/pages/login-page/sign-in-form.tsx","components/pages/login-page/login-page.tsx","modules/movies/types.ts","api/index.ts","modules/movies/actions.ts","components/poster.tsx","components/movie-card.tsx","components/movies-loading.tsx","components/pages/movies-page.tsx","modules/favorites/types.ts","api/favorites-mock.ts","modules/favorites/actions.ts","hooks/use-auth.ts","components/pages/movie-page.tsx","components/private-route.tsx","components/pages/profile-page.tsx","components/pages/favorites-page.tsx","routes.tsx","components/button-link.tsx","components/header.tsx","App.tsx","serviceWorker.ts","modules/movies/reducer.ts","modules/user/reducer.ts","modules/favorites/reducer.ts","modules/reducers.ts","index.tsx","utils/configure-store.ts"],"names":["Types","db","window","localStorage","signUp","user","Promise","resolve","reject","isEmailDupl","getUser","email","isDuplicate","console","log","Error","users","JSON","parse","getItem","Array","isArray","length","push","setItem","stringify","addUser","addUserToSigned","err","signIn","password","update","removeUserFromSigned","removeItem","newUsers","filter","dbUser","find","signUpSuccess","type","SIGNUP_SUCCESS","payload","signUpFailure","error","SIGNUP_FAILURE","signInSuccess","SIGNIN_SUCCESS","signInFailure","SIGNIN_FAILURE","signInSchema","Yup","required","min","signUpSchema","firstName","lastName","gender","passwordConfirm","when","is","val","then","oneOf","genders","initialValues","Form","styled","form","FormTitle","h2","StyledButton","Button","SignUpForm","React","useState","isSubmitted","setIsSubmitted","dispatch","useDispatch","useSelector","state","authLoading","loading","authError","useFormik","validationSchema","onSubmit","values","a","SIGNUP_REQUEST","handleChange","handleSubmit","errors","touched","InputLabel","htmlFor","Input","id","value","onChange","FormHelperText","NativeSelect","inputProps","map","color","variant","CircularProgress","style","marginTop","message","SignInForm","SIGNIN_REQUEST","signInRequest","LoginPage","history","useHistory","isAuthorized","useEffect","Grid","container","spacing","item","sm","md","Paper","API_KEY","process","API_URL","headers","get","url","fetch","response","json","ok","searchMoviesByQuery","query","movies","fetchMore","page","getMovieById","movie","getMovies","ids","all","searchMovieRequest","SEARCH_MOVIE_REQUEST","data","searchMovieSuccess","searchMovieFailure","SEARCH_MOVIE_SUCCESS","SEARCH_MOVIE_FAILURE","getMovieSuccess","GET_MOVIE_SUCCESS","getMovieFailure","GET_MOVIE_FAILURE","fetchMoreSuccess","FETCH_MORE_SUCCESS","getMoviesSuccess","GET_MOVIES_SUCCESS","getMoviesFailure","GET_MOVIES_FAILURE","Wrapper","img","Poster","path","alt","posterUrl","setPosterUrl","controller","AbortController","signal","abort","src","Link","Title","h3","MovieCard","title","poster","to","MovieCardPlaceholder","div","MoviesLoading","placeholder","_","idx","key","xs","MoviesPage","currentPage","setCurrentPage","total_results","results","FETCH_MORE_REQUEST","fetchMoreRequest","slice","poster_path","justify","alignItems","margin","disabled","onClick","padding","addFavoriteMovie","movieId","duplicate","favorites","getMovie","addItem","getFavoriteMovies","getList","deleteFavoriteMovie","favoriteIdx","findIndex","newFavorites","deleteItem","Number","getFavoritesSuccess","GET_FAVORITES_SUCCESS","getFavoritesFailure","GET_FAVORITES_FAILURE","addFavoriteSuccess","ADD_FAVORITE_SUCCESS","addFavoriteFailure","ADD_FAVORITE_FAILURE","deleteFavoriteSuccess","DELETE_FAVORITE_SUCCESS","deleteFavoriteFailure","DELETE_FAVORITE_FAILURE","useAuth","MoviePage","useParams","isFavorite","addToFavorites","ADD_FAVORITE_REQUEST","GET_MOVIE_REQUEST","Date","release_date","toLocaleDateString","overview","PrivateRoute","props","Component","component","rest","render","componentProps","ProfilePage","updateProfile","dirty","FavoritesPage","includes","deleteFavorite","DELETE_FAVORITE_REQUEST","deleteFavoriteRequest","hasMovies","every","GET_MOVIES_REQUEST","getMoviesRequest","visibleMovies","Table","TableHead","TableRow","TableCell","TableBody","Routes","exact","ButtonLink","children","fontWeight","schema","Header","submitQuerySearch","handleLogout","LOGOUT","userName","AppBar","position","Container","Toolbar","display","justifyContent","App","signedUser","GET_FAVORITES_REQUEST","Boolean","location","hostname","match","initialState","total_pages","reducer","action","produce","draft","forEach","stateMovie","filtered","reducers","combineReducers","moviesReducer","userReducer","favoritesReducer","store","composeEnhancers","compose","middlewares","thunk","enhancers","applyMiddleware","createStore","configureStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"uLAAYA,E,kMAAAA,K,kCAAAA,E,kCAAAA,E,kCAAAA,E,kCAAAA,E,kCAAAA,E,kCAAAA,E,mBAAAA,M,KCEZ,IAAMC,EAAKC,OAAOC,aAIX,SAASC,EAAUC,GACxB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAMC,EAmHZ,SAAqBJ,GAGnB,GAFsBK,EAAQL,EAAKM,OAGjC,OAAO,EAGT,OAAO,EA1HiBC,CAAYP,GAGhC,GAFAQ,QAAQC,IAAIL,GAERA,EACF,MAAM,IAAIM,MAAM,wCAkGxB,SAAiBV,GACf,IAAMW,EAAQC,KAAKC,MAAMjB,EAAGkB,QA7Gf,UA6GkC,MAE7BC,MAAMC,QAAQL,IAAUA,EAAMM,OAAS,GAKvDN,EAAMO,KAAKlB,GACXJ,EAAGuB,QArHQ,QAqHQP,KAAKQ,UAAUT,KAHlCf,EAAGuB,QAlHQ,QAkHQP,KAAKQ,UAAU,CAACpB,KAtG/BqB,CAAQrB,GACRsB,EAAgBtB,GAChBE,EAAQF,GAEV,MAAOuB,GACPf,QAAQC,IAAIc,GAEZpB,EAAOoB,OAKN,SAASC,EAAT,GAMS,IALdlB,EAKa,EALbA,MACAmB,EAIa,EAJbA,SAKA,OAAO,IAAIxB,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAMH,EAAOK,EAAQC,GACrB,IAAKN,EACH,MAAM,IAAIU,MAAM,kBACPV,EAAKyB,WAAaA,IAC3BH,EAAgBtB,GAChBE,EAAQF,IAEV,MAAOuB,GACPpB,EAAOoB,OAoBN,SAASG,EAAO1B,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAMQ,EAAQC,KAAKC,MAAMjB,EAAGkB,QAhEnB,UAgEsC,MAE/Ca,IACA/B,EAAGgC,WAnEM,SAqEThC,EAAGuB,QApEY,SAoEUP,KAAKQ,UAAUpB,IACxC,IAAM6B,EAAWlB,EAAMmB,QACrB,SAACC,GAAD,OAAiBA,EAAOzB,QAAUN,EAAKM,SAEzCuB,EAASX,KAAKlB,GACdJ,EAAGuB,QA1EM,QA0EUP,KAAKQ,UAAUS,IAClC3B,EAAQF,GACR,MAAOuB,GACPpB,EAAOoB,OAgBb,SAASI,IACQf,KAAKC,MAAMjB,EAAGkB,QA7FV,WA6FmC,UAEpDlB,EAAGgC,WA/Fc,UAmGrB,SAASN,EAAgBtB,GACRY,KAAKC,MAAMjB,EAAGkB,QApGV,WAoGmC,UAEpDlB,EAAGgC,WAtGc,UAwGnBhC,EAAGuB,QAxGgB,SAwGMP,KAAKQ,UAAUpB,IA0B1C,SAASK,EAAQC,GACf,IAAMK,EAAQC,KAAKC,MAAMjB,EAAGkB,QAAQ,UAAY,MAEhD,SAAIC,MAAMC,QAAQL,IAAUA,EAAMM,OAAS,IAClCN,EAAMqB,MAAK,SAAChC,GAAD,OAAeA,EAAKM,QAAUA,KClH7C,SAAS2B,EAAcjC,GAC5B,MAAO,CACLkC,KAAMvC,EAAMwC,eACZC,QAAS,CACPpC,SAKC,SAASqC,EAAcC,GAC5B,MAAO,CACLJ,KAAMvC,EAAM4C,eACZH,QAAS,CACPE,UA8CC,SAASE,EAAcxC,GAC5B,MAAO,CACLkC,KAAMvC,EAAM8C,eACZL,QAAS,CACPpC,SAKC,SAAS0C,EAAcJ,GAC5B,MAAO,CACLJ,KAAMvC,EAAMgD,eACZP,QAAS,CACPE,U,YC9FOM,EAAeC,IAAW,CACrCvC,MAAOuC,MACJvC,MAAM,8BACNwC,SAAS,8BACZrB,SAAUoB,MAAaE,IAAI,GAAGD,SAAS,gCAG5BE,EAAeH,IAAW,CACrCI,UAAWJ,MAAaE,IAAI,GAAGD,SAAS,gCACxCI,SAAUL,MAAaE,IAAI,GAAGD,SAAS,+BACvCxC,MAAOuC,MACJvC,MAAM,8BACNwC,SAAS,8BACZK,OAAQN,MAAaC,SAAS,IAC9BrB,SAAUoB,MAAaE,IAAI,GAAGD,SAAS,8BACvCM,gBAAiBP,MAAaQ,KAAK,WAAY,CAC7CC,GAAI,SAACC,GAAD,SAAkBA,GAAOA,EAAItC,OAAS,IAC1CuC,KAAMX,MAAaY,MACjB,CAACZ,IAAQ,aACT,0C,gXCJN,IAAMa,EAAU,CAAC,SAAU,QAErBC,EAAgB,CACpBV,UAAW,GACXC,SAAU,GACV5C,MAAO,GACP6C,OAAQ,GACR1B,SAAU,GACV2B,gBAAiB,IAGbQ,EAAOC,IAAOC,KAAV,KAOJC,EAAYF,IAAOG,GAAV,KAITC,EAAeJ,YAAOK,IAAPL,CAAH,KA8GHM,MAzGf,WAAuB,IAAD,EACkBC,IAAMC,UAAS,GADjC,mBACbC,EADa,KACAC,EADA,KAEdC,EAAWC,cAFG,EAG+BC,aACjD,SAACC,GAAD,OAAsBA,EAAM3E,QADb4E,EAHG,EAGZC,QAA6BC,EAHjB,EAGUxC,MAHV,EAO4CyC,YAAU,CACxEpB,gBACAqB,iBAAkBhC,EAClBiC,SAGF,SAAoBC,GAClBV,GFlDFxE,EEmDkB,CACZiD,UAAWiC,EAAOjC,UAClBC,SAAUgC,EAAOhC,SACjB5C,MAAO4E,EAAO5E,MACd6C,OAAQ+B,EAAO/B,OACf1B,SAAUyD,EAAOzD,UFtDvB,uCAAO,WAAO+C,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,EAAMyF,iBAEvBrF,EAAaC,GAAMwD,MACjB,SAACxD,GACCwE,EAASvC,EAAcjC,OAEzB,SAACsC,GACCkC,EAASnC,EAAcC,OARtB,2CAAP,wDEyDEiC,GAAe,GF5DZ,IACLvE,KE2CQqF,EAPY,EAOZA,aAAcC,EAPF,EAOEA,aAAcJ,EAPhB,EAOgBA,OAAQK,EAPxB,EAOwBA,OAAQC,EAPhC,EAOgCA,QAmBpD,OACE,kBAAC5B,EAAD,CAAMqB,SAAUK,GACd,kBAACvB,EAAD,gBACA,6BACE,kBAAC0B,EAAA,EAAD,CAAYC,QAAQ,aAApB,cACA,kBAACC,EAAA,EAAD,CACEC,GAAG,YACHC,MAAOX,EAAOjC,UACd6C,SAAUT,IAEZ,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQvC,WAAasC,EAAOtC,YAGjC,6BACE,kBAACwC,EAAA,EAAD,CAAYC,QAAQ,YAApB,aACA,kBAACC,EAAA,EAAD,CAAOC,GAAG,WAAWC,MAAOX,EAAOhC,SAAU4C,SAAUT,IACvD,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQtC,UAAYqC,EAAOrC,WAGhC,6BACE,kBAACuC,EAAA,EAAD,CAAYC,QAAQ,SAApB,SACA,kBAACC,EAAA,EAAD,CAAOC,GAAG,QAAQC,MAAOX,EAAO5E,MAAOwF,SAAUT,IACjD,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQlF,OAASiF,EAAOjF,QAG7B,6BACE,kBAACmF,EAAA,EAAD,CAAYC,QAAQ,UAApB,UACA,kBAACM,EAAA,EAAD,CACEH,MAAOX,EAAO/B,OACd2C,SAAUT,EACVO,GAAG,SACHK,WAAY,CAAE,aAAc,WAE5B,4BAAQJ,MAAM,QAAd,QACCnC,EAAQwC,KAAI,SAAC/C,GAAD,OACX,4BAAQ0C,MAAO1C,GAASA,QAI9B,6BACE,kBAACsC,EAAA,EAAD,CAAYC,QAAQ,YAApB,YACA,kBAACC,EAAA,EAAD,CACEzD,KAAK,WACL0D,GAAG,WACHC,MAAOX,EAAOzD,SACdqE,SAAUT,IAEZ,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQ/D,UAAY8D,EAAO9D,WAGhC,6BACE,kBAACgE,EAAA,EAAD,CAAYC,QAAQ,mBAApB,oBACA,kBAACC,EAAA,EAAD,CACEzD,KAAK,WACL0D,GAAG,kBACHC,MAAOX,EAAO9B,gBACd0C,SAAUT,IAEZ,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQpC,iBAAmBmC,EAAOnC,kBAGvC,6BACE,kBAACa,EAAD,CAAc/B,KAAK,SAASiE,MAAM,UAAUC,QAAQ,aAApD,WAGCxB,EAAc,kBAACyB,EAAA,EAAD,MAAuB,MAExC,kBAACN,EAAA,EAAD,CAAgBO,MAAO,CAAEC,UAAW,QAAUjE,OAAO,GAClDgC,GAAuB,OAATQ,QAAS,IAATA,OAAA,EAAAA,EAAW0B,UAAW,GAAK,Q,gXC/HlD,IAAM7C,EAAgB,CACpBrD,MAAO,GACPmB,SAAU,IAGNmC,EAAOC,IAAOC,KAAV,KAQJC,EAAYF,IAAOG,GAAV,KAITC,GAAeJ,YAAOK,IAAPL,CAAH,KA+DH4C,OA1Df,WAAuB,IAAD,EACkBrC,IAAMC,UAAS,GADjC,mBACbC,EADa,KACAC,EADA,KAEdC,EAAWC,cAFG,EAG+BC,aACjD,SAACC,GAAD,OAAsBA,EAAM3E,QADb4E,EAHG,EAGZC,QAA6BC,EAHjB,EAGUxC,MAHV,EAO4CyC,YAAU,CACxEpB,gBACAqB,iBAAkBpC,EAClBqC,SAGF,SAAoBC,GAClBV,EHVG,YAMoD,IALzDlE,EAKwD,EALxDA,MACAmB,EAIwD,EAJxDA,SAKA,8CAAO,WAAO+C,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,EAAM+G,iBAEvBlF,EAAa,CAAElB,QAAOmB,aAAY+B,MAChC,SAACxD,GACCwE,EAAShC,EAAcxC,OAEzB,SAACsC,GACCkC,EAAS9B,EAAcJ,OARtB,2CAAP,sDGIIqE,CAAc,CACZrG,MAAO4E,EAAO5E,MACdmB,SAAUyD,EAAOzD,YAGrB8C,GAAe,MAbTc,EAPY,EAOZA,aAAcC,EAPF,EAOEA,aAAcJ,EAPhB,EAOgBA,OAAQK,EAPxB,EAOwBA,OAAQC,EAPhC,EAOgCA,QAgBpD,OACE,kBAAC,EAAD,CAAMP,SAAUK,GACd,kBAAC,EAAD,gBACA,6BACE,kBAACG,EAAA,EAAD,CAAYC,QAAQ,SAApB,SACA,kBAACC,EAAA,EAAD,CAAOC,GAAG,QAAQC,MAAOX,EAAO5E,MAAOwF,SAAUT,IACjD,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQlF,OAASiF,EAAOjF,QAG7B,6BACE,kBAACmF,EAAA,EAAD,CAAYC,QAAQ,YAApB,YACA,kBAACC,EAAA,EAAD,CACEzD,KAAK,WACL0D,GAAG,WACHC,MAAOX,EAAOzD,SACdqE,SAAUT,IAEZ,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQ/D,UAAY8D,EAAO9D,WAGhC,6BACE,kBAAC,GAAD,CAAcS,KAAK,SAASiE,MAAM,UAAUC,QAAQ,aAApD,WAGCxB,EAAc,kBAACyB,EAAA,EAAD,MAAuB,MAExC,kBAACN,EAAA,EAAD,CAAgBO,MAAO,CAAEC,UAAW,QAAUjE,OAAO,GAClDgC,GAAuB,OAATQ,QAAS,IAATA,OAAA,EAAAA,EAAW0B,UAAW,GAAK,QCrDnCI,ICNHjH,GDMGiH,GA5Bf,WACE,IAAMC,EAAUC,cACVC,EAAerC,aACnB,SAACC,GAAD,OAAsBA,EAAM3E,KAAK+G,gBASnC,OANA3C,IAAM4C,WAAU,WACVD,GACFF,EAAQ3F,KAAK,aAEd,CAAC2F,EAASE,IAGX,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,QAGJ,kBAACN,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,KACE,kBAAC,GAAD,W,SCCE5H,K,8CAAAA,E,8CAAAA,E,8CAAAA,E,wCAAAA,E,wCAAAA,E,wCAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,0CAAAA,E,6BAAAA,Q,KC7BZ,IAAM6H,GAAUC,mCACVC,GAAU,+BAEVC,GAAU,CACd,eAAgB,oB,SAGHC,G,iFAAf,WAAsBC,GAAtB,iBAAA1C,EAAA,sEACyB2C,MAAMD,EAAK,CAChCF,aAFJ,cACQI,EADR,gBAKqBA,EAASC,OAL9B,UAKQA,EALR,QAOMD,EAASE,GAPf,0CAQWD,GARX,cAUU,IAAItH,MAAMsH,EAAKxB,SAVzB,6C,sBAcO,SAAe0B,GAAtB,mC,8CAAO,WAAmCC,GAAnC,iBAAAhD,EAAA,6DACD0C,EADC,UACQH,GADR,iCACwCF,GADxC,kBACyDW,GAEzDA,IACHN,EAAG,UAAMH,GAAN,kCAAuCF,KAJvC,SAOgBI,GAAkBC,GAPlC,cAOCO,EAPD,yBAQEA,GARF,4C,sBAWA,SAAeC,GAAtB,qC,8CAAO,WAAyBF,EAAeG,GAAxC,iBAAAnD,EAAA,6DACD0C,EADC,UACQH,GADR,iCACwCF,GADxC,kBACyDW,EADzD,iBACuEG,GAEvEH,IACHN,EAAG,UAAMH,GAAN,kCAAuCF,GAAvC,iBAAuDc,IAJvD,SAOgBV,GAAkBC,GAPlC,cAOCO,EAPD,yBAQEA,GARF,4C,sBAWA,SAAeG,GAAtB,mC,8CAAO,WAA4B3C,GAA5B,iBAAAT,EAAA,6DACC0C,EADD,UACUH,GADV,kBAC2B9B,EAD3B,oBACyC4B,IADzC,SAEeI,GAAWC,GAF1B,cAECW,EAFD,yBAIEA,GAJF,4C,sBAOA,SAAeC,GAAtB,mC,8CAAO,WAAyBC,GAAzB,SAAAvD,EAAA,sEACQlF,QAAQ0I,IACnBD,EAAIxC,IAAJ,uCAAQ,WAAON,GAAP,eAAAT,EAAA,sEACiBoD,GAAa3C,GAD9B,cACAmC,EADA,yBAECA,GAFD,2CAAR,wDAFG,oF,sBCxCA,SAASa,GACdT,GAEA,8CAAO,WAAO3D,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,GAAMkJ,qBAAsBzG,QAAS,CAAE+F,WAExDD,GAAoBC,GAAO3E,MACzB,SAACsF,GACCtE,EAASuE,GAAmBD,OAE9B,SAACxG,GACCkC,EAASwE,GAAmB1G,OAR3B,2CAAP,sDAcK,SAASyG,GAAmBD,GACjC,MAAO,CACL5G,KAAMvC,GAAMsJ,qBACZ7G,QAAS,CACP0G,SAKC,SAASE,GAAmB1G,GACjC,MAAO,CACLJ,KAAMvC,GAAMuJ,qBACZ9G,QAAS,CACPE,UAsBC,SAAS6G,GAAgBX,GAC9B,MAAO,CACLtG,KAAMvC,GAAMyJ,kBACZhH,QAAS,CACPoG,UAKC,SAASa,GAAgB/G,GAC9B,MAAO,CACLJ,KAAMvC,GAAM2J,kBACZlH,QAAS,CACPE,UAuBC,SAASiH,GAAiBT,GAC/B,MAAO,CACL5G,KAAMvC,GAAM6J,mBACZpH,QAAS,CACP0G,SAsBC,SAASW,GAAiBX,GAC/B,MAAO,CACL5G,KAAMvC,GAAM+J,mBACZtH,QAAS,CACP0G,SAKC,SAASa,GAAiBrH,GAC/B,MAAO,CACLJ,KAAMvC,GAAMiK,mBACZxH,QAAS,CACPE,U,8JCnIN,IAAMuH,GAAUhG,IAAOiG,IAAV,MAqCEC,OA9Bf,YAAuC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,IAAc,EACF7F,IAAMC,SACtC,uCAFkC,mBAC7B6F,EAD6B,KAClBC,EADkB,KA2BpC,OAvBA/F,IAAM4C,WAAU,WAEd,IAAIoD,EAAa,IAAIC,gBAiBrB,OAhBA,sBAAC,4BAAAlF,EAAA,yDACc,OAAT6E,EADL,0CAG4BlC,MAAM,mCAAD,OACSkC,GACnC,CAAEM,OAAQF,EAAWE,SAL5B,QAGWvC,EAHX,QAQkBE,IAAMF,EAASF,KAC1BsC,EAAapC,EAASF,KAT7B,gDAYKrH,QAAQ8B,MAAR,MAZL,wDAAD,GAgBO,WACL8H,EAAWG,WAEZ,CAACP,IACG,kBAACH,GAAD,CAASW,IAAKN,EAAWD,IAAKA,K,8IC9BvC,IAAMJ,GAAUhG,YAAO4G,KAAP5G,CAAH,MAEP6G,GAAQ7G,IAAO8G,GAAV,MAWIC,OATf,YAAkD,IAA7BhF,EAA4B,EAA5BA,GAAIiF,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,OAC9B,OACE,kBAAC,GAAD,CAASC,GAAE,kBAAanF,IACtB,kBAAC,GAAD,CAAQoE,KAAMc,EAAQb,IAAKY,IAC3B,kBAACH,GAAD,KAAQG,K,uPCdd,IAAMG,GAAuBnH,IAAOoH,IAAV,MAEpBlB,GAASlG,IAAOoH,IAAV,MAwBGC,OAhBf,WACE,IAAMC,EAAcpK,MAAM,IAE1B,OACE,kBAACkG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtBgE,EAAYjF,KAAI,SAACkF,EAAQC,GAAT,OACf,kBAACpE,EAAA,EAAD,CAAMG,MAAI,EAACkE,IAAKD,EAAKE,GAAI,GAAIlE,GAAI,EAAGC,GAAI,GACtC,kBAAC0D,GAAD,KACE,kBAAC,GAAD,aCkEGQ,ICpFH7L,GDoFG6L,GA5Ef,WACE,IAAMhH,EAAWC,cADG,EAEkBL,IAAMC,SAAS,GAFjC,mBAEboH,EAFa,KAEAC,EAFA,OAGoBhH,aACtC,SAACC,GAAD,OAAsBA,EAAMyD,UADtBU,EAHY,EAGZA,KAAMjE,EAHM,EAGNA,QAASvC,EAHH,EAGGA,MAAO6F,EAHV,EAGUA,MAgC9B,GA5BA/D,IAAM4C,WAAU,WACdxC,EAASoE,GAAmB,OAC3B,CAACpE,IAEJJ,IAAM4C,WAAU,WAEZ8B,EAAK6C,cAA8B,GAAdF,GACrB3C,EAAK8C,QAAQ3K,OAAuB,GAAdwK,GAEtBjH,EJoDC,SACL2D,EACAG,GAEA,8CAAO,WAAO9D,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,GAAMkM,qBAEvBxD,GAAUF,EAAOG,GAAM9E,MACrB,SAACsF,GACCtE,EAAS+E,GAAiBT,OAE5B,SAACxG,GACCkC,EAASwE,GAAmB1G,OAR3B,2CAAP,sDIxDawJ,CAAiB3D,EAAOW,EAAKR,KAAO,MAE9C,CACD9D,EACAiH,EACA3C,EAAK8C,QACL9C,EAAKR,KACLQ,EAAK6C,cACLxD,IAWEtD,EACF,OAAO,kBAAC,GAAD,MAET,GAAIvC,EACF,OAAO,8BAAOA,EAAMkE,SAGtB,IAAM4B,EAASU,EAAK8C,QAAQG,MAAM,GAAKN,EAAa,IAAMA,EAAc,IAExE,OACE,kBAACxE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACtBiB,EAAOlC,KAAI,SAACsC,GAAD,OACV,kBAACvB,EAAA,EAAD,CAAMG,MAAI,EAACkE,IAAK9C,EAAM5C,GAAI2F,GAAI,GAAIlE,GAAI,EAAGC,GAAI,GAC3C,kBAAC,GAAD,CACE1B,GAAI4C,EAAM5C,GACViF,MAAOrC,EAAMqC,MACbC,OAAQtC,EAAMwD,kBAIpB,kBAAC/E,EAAA,EAAD,CACEC,WAAS,EACT+E,QAAQ,SACRC,WAAW,SACX5F,MAAO,CAAE6F,OAAQ,kBAEjB,kBAACjI,EAAA,EAAD,CAAQkI,SAA0B,IAAhBX,EAAmBY,QAAS,WAjClDX,EAAeD,EAAc,KAiCzB,aAGA,0BAAMnF,MAAO,CAAEgG,QAAS,WAAab,EAAc,GACnD,kBAACvH,EAAA,EAAD,CACEkI,SAA8B,IAAnBX,EAAc,IAAW3C,EAAK6C,cACzCU,QAAS,WAnCfX,EAAeD,EAAc,KAiCzB,iB,SCzEI9L,K,gDAAAA,E,gDAAAA,E,gDAAAA,E,8CAAAA,E,8CAAAA,E,8CAAAA,E,oDAAAA,E,oDAAAA,E,qDAAAA,Q,kBCLNC,GAAKC,OAAOC,aAGX,SAASyM,GAAiBC,GAC/B,OAAO,IAAIvM,SAAQ,SAACC,EAASC,GAC3B,IAGE,GA4DN,SAAqBqM,GACnB,IAAMC,EAUR,SAAkBD,GAChB,IAAME,EAAY9L,KAAKC,MAAMjB,GAAGkB,QA/EnB,cA+EsC,MAEnD,GAAIC,MAAMC,QAAQ0L,IAAcA,EAAUzL,OAAS,EACjD,OAAOyL,EAAU1K,MAAK,SAAC4D,GAAD,OAAyBA,GAAM4G,KAdrCG,CAASH,GAG3B,GAFAhM,QAAQC,IAAIgM,GAERA,EACF,OAAO,EAGT,OAAO,EAtEwBlM,CAAYiM,GAGrC,MAAM,IAAI9L,MAAM,yCA+CxB,SAAiB8L,GACf,IAAME,EAAY9L,KAAKC,MAAMjB,GAAGkB,QAxDnB,cAwDsC,MACjCC,MAAMC,QAAQ0L,IAAcA,EAAUzL,OAAS,GAK/DyL,EAAUxL,KAAKsL,GACf5M,GAAGuB,QA/DQ,YA+DQP,KAAKQ,UAAUsL,KAHlC9M,GAAGuB,QA5DQ,YA4DQP,KAAKQ,UAAU,CAACoL,KAlD/BI,CAAQJ,GACRtM,EAAQsM,GAEV,MAAOjL,GACPf,QAAQC,IAAIc,GAEZpB,EAAOoB,OAKN,SAASsL,KACd,OAAO,IAAI5M,SAAQ,SAACC,EAASC,GAC3B,IAEED,EA6DN,WACE,IAAMwM,EAAY9L,KAAKC,MAAMjB,GAAGkB,QAvFnB,cAuFsC,MAEnD,GAAIC,MAAMC,QAAQ0L,IAAcA,EAAUzL,OAAS,EACjD,OAAOyL,EAGT,MAAO,GArESI,IAEZ,MAAOvL,GACPpB,EAAOoB,OAKN,SAASwL,GAAoBnH,GAClC,OAAO,IAAI3F,SAAQ,SAACC,EAASC,GAC3B,KASJ,SAAoBqM,GAClB,IAAME,EAAY9L,KAAKC,MAAMjB,GAAGkB,QA5CnB,cA4CsC,MAC7CkM,EAAcN,EAAUO,WAC5B,SAACrH,GAAD,OAAyBA,GAAM4G,KAE3BU,EAAY,uBACbR,EAAUX,MAAM,EAAGiB,IADN,aAEbN,EAAUX,MAAMiB,EAAc,KAEnCpN,GAAGuB,QApDU,YAoDMP,KAAKQ,UAAU8L,IAjB9BC,CAAWvH,GACX1F,EAAQkN,OAAOxH,IACf,MAAOrE,GACPpB,EAAOoB,OCTN,SAAS8L,GAAoBvE,GAClC,MAAO,CACL5G,KAAMvC,GAAM2N,sBACZlL,QAAS,CACP0G,SAKC,SAASyE,GAAoBjL,GAClC,MAAO,CACLJ,KAAMvC,GAAM6N,sBACZpL,QAAS,CACPE,UAsBC,SAASmL,GAAmB7H,GACjC,MAAO,CACL1D,KAAMvC,GAAM+N,qBACZtL,QAAS,CACPwD,OAKC,SAAS+H,GAAmBrL,GACjC,MAAO,CACLJ,KAAMvC,GAAMiO,qBACZxL,QAAS,CACPE,UAsBC,SAASuL,GAAsBjI,GACpC,MAAO,CACL1D,KAAMvC,GAAMmO,wBACZ1L,QAAS,CACPwD,OAKC,SAASmI,GAAsBzL,GACpC,MAAO,CACLJ,KAAMvC,GAAMqO,wBACZ5L,QAAS,CACPE,UC/GS,SAAS2L,KAAW,IAAD,EACDvJ,aAAY,SAACC,GAAD,OAAsBA,EAAM3E,QAEvE,MAAO,CAAEA,KAHuB,EACxBA,KAEO+G,aAHiB,EAClBA,cC0EDmH,OAjEf,WAAsB,IACR1B,EAAY2B,cAAhBvI,GACFpB,EAAWC,cAETsC,EAAiBkH,KAAjBlH,aACFyB,EAAQ9D,aAAY,SAACC,GAAD,OACxBA,EAAMyD,OAAOU,KAAK8C,QAAQ5J,MACxB,SAACwG,GAAD,OAAkBA,EAAM5C,KAAOwH,OAAOZ,SAPvB,EAUQ9H,aAAY,SAACC,GAAD,OAAsBA,EAAMyD,UAA3DvD,EAVW,EAUXA,QAASvC,EAVE,EAUFA,MACX8L,EAAa1J,aACjB,SAACC,GAAD,OAEG,IADDA,EAAM+H,UAAUhE,IAAIuE,WAAU,SAACrH,GAAD,OAAgBA,IAAOwH,OAAOZ,SAUhE,SAAS6B,IFaJ,IACLzI,EEbEpB,GFaFoB,EEb8B4G,EFe9B,uCAAO,WAAOhI,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,GAAM2O,uBAEvB/B,GAAiB3G,GAAIpC,MACnB,SAACgJ,GACChI,EAASiJ,GAAmBjB,OAE9B,SAAClK,GACCkC,EAASmJ,GAAmBrL,OAR3B,2CAAP,wDEZA,OAVA8B,IAAM4C,WAAU,WTiBX,IACLpB,ESjBO4C,GACHhE,GTgBJoB,EShB6BwH,OAAOZ,GTkBpC,uCAAO,WAAOhI,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,GAAM4O,oBAEvBhG,GAAa3C,GAAIpC,MACf,SAACgF,GACChE,EAAS2E,GAAgBX,OAE3B,SAAClG,GACCkC,EAAS6E,GAAgB/G,OARxB,2CAAP,0DShBG,CAACkC,EAAUgE,EAAOgE,IAMjB3H,EACK,kBAACwB,EAAA,EAAD,MAGL/D,EACK,8BAAOA,EAAMkE,SAGjBgC,EAKH,kBAACjB,EAAA,EAAD,CAAOjB,MAAO,CAAEgG,QAAS,SACvB,kBAACrF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GACb,kBAAC,GAAD,CAAQ0C,KAAMxB,EAAMwD,YAAa/B,IAAKzB,EAAMqC,SAE9C,kBAAC5D,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GACb,4BAAKkB,EAAMqC,OACX,6BAAM,IAAI2D,KAAKhG,EAAMiG,cAAcC,sBACnC,2BAAIlG,EAAMmG,UACT5H,EACC,kBAAC7C,EAAA,EAAD,CACEkI,SAAUgC,EACV/B,QAAS,kBAAMgC,KACflI,MAAM,UACNC,QAAQ,aAEPgI,EAAa,eAAiB,oBAE/B,QAtBH,4C,QCnCI,SAASQ,GAAaC,GAAe,IAC1C9H,EAAiBkH,KAAjBlH,aAEW+H,EAAuBD,EAAlCE,UAAyBC,EAHgB,aAGPH,EAHO,eAKjD,OAAK9H,EAKH,kBAAC,IAAD,iBACMiI,EADN,CAEEC,OAAQ,SAACC,GAAD,OACNnI,EACE,kBAAC+H,EAAcI,GAEf,kBAAC,IAAD,CAAUnE,GAAG,eAVZ,K,kTCAX,IAAMrH,GAAU,CAAC,SAAU,QAErBE,GAAOC,IAAOC,KAAV,MASJG,GAAeJ,YAAOK,IAAPL,CAAH,MAwIHsL,OAnIf,WAAwB,IACdnP,EAASiO,KAATjO,KADa,EAEiBoE,IAAMC,UAAS,GAFhC,mBAEdC,EAFc,KAEDC,EAFC,KAGfC,EAAWC,cAHI,EAI8BC,aACjD,SAACC,GAAD,OAAsBA,EAAM3E,QADb4E,EAJI,EAIbC,QAA6BC,EAJhB,EAISxC,MAIxBqB,EAAa,6BAAQ3D,GAAR,IAAcoD,gBAAiBpD,EAAKyB,WARlC,EAgBjBsD,YAAU,CACZpB,gBACAqB,iBAAkBhC,EAClBiC,SAGF,SAAoBC,GAClBV,ElBkEG,SACLxE,GAEA,8CAAO,WAAOwE,GAAP,SAAAW,EAAA,sDACLzD,EAAO1B,GAAMwD,MACX,SAACxD,GACCwE,EAASvC,EAAcjC,OAEzB,SAACsC,GACCkC,EAASnC,EAAcC,OANtB,2CAAP,sDkBpEI8M,CAAc,CACZnM,UAAWiC,EAAOjC,UAClBC,SAAUgC,EAAOhC,SACjB5C,MAAO4E,EAAO5E,MACd6C,OAAQ+B,EAAO/B,OACf1B,SAAUyD,EAAOzD,YAGrB8C,GAAe,MAtBfc,EAVmB,EAUnBA,aACAC,EAXmB,EAWnBA,aACAJ,EAZmB,EAYnBA,OACAK,EAbmB,EAanBA,OACAC,EAdmB,EAcnBA,QACA6J,EAfmB,EAenBA,MAoBF,OACE,kBAAC9H,EAAA,EAAD,CAAOjB,MAAO,CAAEgG,QAAS,SACvB,kBAACrF,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACmE,GAAI,GAAIjE,GAAI,GACrB,gDACA,kBAAC,GAAD,CAAMrC,SAAUK,GACd,6BACE,kBAACG,EAAA,EAAD,CAAYC,QAAQ,aAApB,cACA,kBAACC,EAAA,EAAD,CACEC,GAAG,YACHC,MAAOX,EAAOjC,UACd6C,SAAUT,IAEZ,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQvC,WAAasC,EAAOtC,YAGjC,6BACE,kBAACwC,EAAA,EAAD,CAAYC,QAAQ,YAApB,aACA,kBAACC,EAAA,EAAD,CACEC,GAAG,WACHC,MAAOX,EAAOhC,SACd4C,SAAUT,IAEZ,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQtC,UAAYqC,EAAOrC,WAGhC,6BACE,kBAACuC,EAAA,EAAD,CAAYC,QAAQ,SAApB,SACA,kBAACC,EAAA,EAAD,CAAOC,GAAG,QAAQC,MAAOX,EAAO5E,MAAOwF,SAAUT,IACjD,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQlF,OAASiF,EAAOjF,QAG7B,6BACE,kBAACmF,EAAA,EAAD,CAAYC,QAAQ,UAApB,UACA,kBAACM,EAAA,EAAD,CACEH,MAAOX,EAAO/B,OACd2C,SAAUT,EACVO,GAAG,SACHK,WAAY,CAAE,aAAc,WAE5B,4BAAQJ,MAAM,QAAd,QACCnC,GAAQwC,KAAI,SAAC/C,GAAD,OACX,4BAAQ0C,MAAO1C,GAASA,QAI9B,6BACE,kBAACsC,EAAA,EAAD,CAAYC,QAAQ,YAApB,YACA,kBAACC,EAAA,EAAD,CACEzD,KAAK,WACL0D,GAAG,WACHC,MAAOX,EAAOzD,SACdqE,SAAUT,IAEZ,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQ/D,UAAY8D,EAAO9D,WAGhC,6BACE,kBAACgE,EAAA,EAAD,CAAYC,QAAQ,mBAApB,oBAGA,kBAACC,EAAA,EAAD,CACEzD,KAAK,WACL0D,GAAG,kBACHC,MAAOX,EAAO9B,gBACd0C,SAAUT,IAEZ,kBAACU,EAAA,EAAD,CAAgBzD,OAAO,GACpBkD,EAAQpC,iBAAmBmC,EAAOnC,kBAGvC,6BACE,kBAAC,GAAD,CACEgJ,UAAWiD,EACXnN,KAAK,SACLiE,MAAM,UACNC,QAAQ,aAJV,QAQCxB,EAAc,kBAACyB,EAAA,EAAD,MAAuB,MAExC,kBAACN,EAAA,EAAD,CAAgBO,MAAO,CAAEC,UAAW,QAAUjE,OAAO,GAClDgC,GAAuB,OAATQ,QAAS,IAATA,OAAA,EAAAA,EAAW0B,UAAW,GAAK,W,kDC/CzC8I,OA5Ff,WACE,IAAM9K,EAAWC,cADM,EAEeL,IAAMC,SAAS,GAF9B,mBAEhBoH,EAFgB,KAEHC,EAFG,KAIfhD,EAAQhE,aAAY,SAACC,GAAD,OAAsBA,EAAM+H,aAAhDhE,IAJe,EAKYhE,aAAY,SAACC,GAAD,MAAuB,CACpEyD,OAAQzD,EAAMyD,OAAOU,KAAK8C,QAAQ9J,QAAO,SAAC0G,GACxC,OAAOzH,MAAMC,QAAQ0H,IAAQA,EAAI6G,SAAS/G,EAAM5C,OAElDf,QAASF,EAAMyD,OAAOvD,QACtBvC,MAAOqC,EAAMyD,OAAO9F,UALd8F,EALe,EAKfA,OAAQvD,EALO,EAKPA,QAASvC,EALF,EAKEA,MA0BzB,SAASkN,EAAe5J,GACtBpB,ELiCG,SACLoB,GAEA,8CAAO,WAAOpB,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,GAAM8P,0BAEvB1C,GAAoBnH,GAAIpC,MACtB,SAACgJ,GACChI,EAASqJ,GAAsBrB,OAEjC,SAAClK,GACCkC,EAASuJ,GAAsBzL,OAR9B,2CAAP,sDKpCWoN,CAAsB9J,IAGjC,GAtBAxB,IAAM4C,WAAU,WACd,IAAM2I,EAAYjH,EAAIkH,OACpB,SAAChK,GAAD,QAAkBwC,EAAOpG,MAAK,SAACwG,GAAD,OAAkBA,EAAM5C,KAAOA,QAG3D8C,EAAIzH,OAAS,IAAM0O,IAAc9K,GACnCL,EZuEC,SACLkE,GAEA,8CAAO,WAAOlE,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,GAAMkQ,qBAEvBpH,GAAUC,GAAKlF,MACb,SAACsF,GACCtE,EAASiF,GAAiBX,OAE5B,SAACxG,GACCkC,EAASmF,GAAiBrH,OARzB,2CAAP,sDY1EawN,CAAiBpH,MAE3B,CAAClE,EAAUkE,EAAKN,EAAQvD,IAcvBA,EACF,OAAO,4CAET,GAAIvC,EACF,OAAO,8BAAOA,EAAMkE,SAGtB,IAAMuJ,EAAgB3H,EAAO2D,MAAoB,GAAdN,EAAsC,IAAnBA,EAAc,IAEpE,OACE,kBAACxE,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACmE,GAAI,IACb,kBAACyE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,qBACA,kBAACA,GAAA,EAAD,iBACA,kBAACA,GAAA,EAAD,QAGJ,kBAACC,GAAA,EAAD,KACGL,EAAc7J,KAAI,SAACsC,GAAD,OACjB,kBAAC0H,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAAC,GAAD,CAAQnG,KAAMxB,EAAMwD,YAAa/B,IAAKzB,EAAMqC,SAE9C,kBAACsF,GAAA,EAAD,KAAY3H,EAAMqC,OAClB,kBAACsF,GAAA,EAAD,KAAY3H,EAAMiG,cAClB,kBAAC0B,GAAA,EAAD,KAAY3H,EAAMmG,UAClB,kBAACwB,GAAA,EAAD,KACE,kBAACjM,EAAA,EAAD,CAAQmI,QAAS,kBAAMmD,EAAehH,EAAM5C,MAA5C,kBASZ,kBAACqB,EAAA,EAAD,CAAMG,MAAI,EAACmE,GAAI,IACb,kBAACrH,EAAA,EAAD,CAAQkI,SAA0B,IAAhBX,EAAmBY,QAAS,WArDlDX,EAAeD,EAAc,KAqDzB,aAGCA,EAAc,EACf,kBAACvH,EAAA,EAAD,CACEkI,SAA8B,IAAnBX,EAAc,IAAWrD,EAAOnH,OAC3CoL,QAAS,WAvDfX,EAAeD,EAAc,KAqDzB,gBC9EO4E,OAbf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACtG,KAAK,IAAI+E,UAAWvD,KACjC,kBAAC,IAAD,CAAO8E,OAAK,EAACtG,KAAK,SAAS+E,UAAWnI,KACtC,kBAAC,IAAD,CAAO0J,OAAK,EAACtG,KAAK,UAAU+E,UAAWvD,KACvC,kBAAC,IAAD,CAAO8E,OAAK,EAACtG,KAAK,cAAc+E,UAAWb,KAC3C,kBAACU,GAAD,CAAc0B,OAAK,EAACtG,KAAK,WAAW+E,UAAWI,KAC/C,kBAACP,GAAD,CAAc0B,OAAK,EAACtG,KAAK,aAAa+E,UAAWO,O,8BCIxCiB,OAZf,YAA8C,IAAxBxF,EAAuB,EAAvBA,GAAIyF,EAAmB,EAAnBA,SACxB,OACE,kBAACtM,EAAA,EAAD,CACEoC,MAAO,CAAEH,MAAO,OAAQsK,WAAY,QACpC1B,UAAWtE,KACXM,GAAIA,GAEHyF,I,gSCGP,IAAME,GAAS7N,IAAW,CACxBsF,MAAOtF,MAAaE,IAAI,GAAGD,SAAS,yBAGhCa,GAAgB,CACpBwE,MAAO,IAGHlE,GAAeJ,YAAOK,IAAPL,CAAH,MAKZD,GAAOC,IAAOC,KAAV,MA4EK6M,OAjEf,WACE,IAAMnM,EAAWC,cACXoC,EAAUC,cAFA,EAGemH,KAAvBjO,EAHQ,EAGRA,KAAM+G,EAHE,EAGFA,aAHE,EAK+BhC,YAAU,CACvDpB,iBACAqB,iBAAkB0L,GAClBzL,SAAU,SAACC,GAAD,OAGZ,SAA2BA,GACzBV,EAASoE,GAAmB1D,EAAOiD,QACnCtB,EAAQ3F,KAAK,WALc0P,CAAkB1L,MAHvCI,EALQ,EAKRA,aAAcD,EALN,EAKMA,aAAcH,EALpB,EAKoBA,OAWpC,SAAS2L,IACH9J,GACFvC,EtB8CJ,uCAAO,WAAOA,GAAP,SAAAW,EAAA,sDDrBA,IAAIlF,SAAQ,SAACC,EAASC,GAC3B,IACEwB,IACAzB,IACA,MAAOqB,GACPpB,EAAOoB,OCiBAiC,MACP,WACEgB,EAUC,CACLtC,KAAMvC,EAAMmR,YATV,SAACxO,GACC9B,QAAQ8B,MAAMA,MANb,2CAAP,uDsB1CA,IAAMyO,EAAWhK,EAAe/G,EAAKiD,UAAY,QAEjD,OACE,kBAAC+N,GAAA,EAAD,CAAQC,SAAS,SACf,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACE/K,QAAQ,QACRE,MAAO,CAAE8K,QAAS,OAAQC,eAAgB,kBAE1C,kBAAC,GAAD,CAAM/K,MAAO,CAAE8K,QAAS,QAAUnM,SAAUK,GAC1C,kBAACG,EAAA,EAAD,CAAYC,QAAQ,SAClB,kBAACC,EAAA,EAAD,CACEQ,MAAM,UACNN,MAAOX,EAAOiD,MACdrC,SAAUT,EACVO,GAAG,QACHuF,YAAY,YACZrI,UAAU,KAGd,kBAACoB,EAAA,EAAD,CAAQhC,KAAK,UAAb,WAEF,yCAAe6O,GACf,yBAAKzK,MAAO,CAAE8K,QAAS,OAAQlF,WAAY,WACzC,kBAAC,GAAD,CAAYnB,GAAG,WAAf,UACChE,EACC,oCACE,kBAAC,GAAD,CAAYgE,GAAG,YAAf,WACA,kBAAC,GAAD,CAAYA,GAAG,cAAf,aACA,kBAAC,GAAD,CAAcsB,QAAS,kBAAMwE,MAA7B,WAKF,kBAAC,GAAD,CAAY9F,GAAG,UAAf,cCzECuG,OAlBf,WACE,IAAM9M,EAAWC,cAOjB,OALAL,IAAM4C,WAAU,WACdxC,EvByDF,uCAAO,WAAOA,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,EAAM+G,iBDpBlB,IAAIzG,SAAQ,SAACC,EAASC,GAC3B,IACE,IAAMoR,EAAa3Q,KAAKC,MAAMjB,EAAGkB,QAhDlB,WAgD2C,SAC1D,IAAIyQ,EAGF,MAAM,IAAI7Q,MAAM,mBAFhBR,EAAQqR,GAIV,MAAOhQ,GACPpB,EAAOoB,OCaAiC,MACP,SAACxD,GACCwE,EAAShC,EAAcxC,OAEzB,SAACsC,GACCkC,EAAS9B,EAAcJ,OARtB,2CAAP,uDuBxDEkC,ETIF,uCAAO,WAAOA,GAAP,SAAAW,EAAA,sDACLX,EAAS,CAAEtC,KAAMvC,GAAM6R,wBAEvB3E,KAAoBrJ,MAClB,SAACsF,GACCtE,EAAS6I,GAAoBvE,OAE/B,SAACxG,GACCkC,EAAS+I,GAAoBjL,OAR5B,2CAAP,yDSHG,CAACkC,IAGF,oCACE,kBAAC,GAAD,MACA,kBAAC0M,GAAA,EAAD,CAAW5K,MAAO,CAAEC,UAAW,UAC7B,kBAAC,GAAD,SCRYkL,QACW,cAA7B5R,OAAO6R,SAASC,UAEe,UAA7B9R,OAAO6R,SAASC,UAEhB9R,OAAO6R,SAASC,SAASC,MACvB,2D,gCCdAC,GAAsB,CAC1B/I,KAAM,CACJR,KAAM,EACNsD,QAAS,GACTkG,YAAa,EACbnG,cAAe,GAEjB9G,SAAS,EACTvC,MAAO,KACP6F,MAAO,IAsEM4J,GAnEC,eAACpN,EAAD,uDAAgBkN,GAAcG,EAA9B,8CACdC,aAAQtN,GAAO,SAACuN,GACd,OAAQF,EAAO9P,MACb,KAAKvC,GAAMkJ,qBACTqJ,EAAMrN,SAAU,EAChBqN,EAAM5P,MAAQ,KACd4P,EAAM/J,MAAQ6J,EAAO5P,QAAQ+F,MAC7B,MACF,KAAKxI,GAAM4O,kBACX,KAAK5O,GAAMkQ,mBACX,KAAKlQ,GAAMkM,mBACTqG,EAAMrN,SAAU,EAChBqN,EAAM5P,MAAQ,KACd,MACF,KAAK3C,GAAMsJ,qBACTiJ,EAAMrN,SAAU,EAChBqN,EAAMpJ,KAAOkJ,EAAO5P,QAAQ0G,KAC5B,MACF,KAAKnJ,GAAM+J,mBAAqB,IACtBZ,EAASkJ,EAAO5P,QAAhB0G,KACRoJ,EAAMrN,SAAU,EAChBiE,EAAKqJ,SAAQ,SAAC3J,IAIH,IAFP7D,EAAMmE,KAAK8C,QAAQqB,WACjB,SAACmF,GAAD,OAAuBA,EAAWxM,KAAO4C,EAAM5C,OAGjDsM,EAAMpJ,KAAK8C,QAAQ1K,KAAKsH,MAG5B,MAEF,KAAK7I,GAAM6J,mBAAqB,IACtBV,EAASkJ,EAAO5P,QAAhB0G,KACRoJ,EAAMrN,SAAU,EAChBqN,EAAMpJ,KAAO,CACXR,KAAMQ,EAAKR,KACXwJ,YAAahJ,EAAKgJ,YAClBnG,cAAe7C,EAAK6C,cACpBC,QAAQ,GAAD,oBAAMjH,EAAMmE,KAAK8C,SAAjB,aAA6B9C,EAAK8C,WAE3C,MAEF,KAAKjM,GAAMyJ,kBAAX,IACUZ,EAAUwJ,EAAO5P,QAAjBoG,OAKC,IAFP7D,EAAMmE,KAAK8C,QAAQqB,WACjB,SAACmF,GAAD,OAAuBA,EAAWxM,KAAO4C,EAAM5C,OAGjDsM,EAAMpJ,KAAK8C,QAAQ1K,KAAKsH,GAG1B0J,EAAMrN,SAAU,EAChB,MACF,KAAKlF,GAAM2J,kBACX,KAAK3J,GAAMiK,mBACX,KAAKjK,GAAMuJ,qBACTgJ,EAAMrN,SAAU,EAChBqN,EAAM5P,MAAQ0P,EAAO5P,QAAQE,MAC7B,MACF,QACE,OAAOqC,OC3ETkN,GAAsB,CAC1B7R,KAAM,CACJiD,UAAW,GACXC,SAAU,GACV5C,MAAO,GACP6C,OAAQ,GACR1B,SAAU,IAEZsF,cAAc,EACdlC,SAAS,EACTvC,MAAO,MA+BMyP,GA5BC,eAACpN,EAAD,uDAAgBkN,GAAcG,EAA9B,8CACdC,aAAQtN,GAAO,SAACuN,GACd,OAAQF,EAAO9P,MACb,KAAKvC,EAAMyF,eACX,KAAKzF,EAAM+G,eACTwL,EAAMrN,SAAU,EAChBqN,EAAM5P,MAAQ,KACd,MACF,KAAK3C,EAAMwC,eACX,KAAKxC,EAAM8C,eACTyP,EAAMlS,KAAOgS,EAAO5P,QAAQpC,KAC5BkS,EAAMnL,cAAe,EACrBmL,EAAMrN,SAAU,EAChB,MACF,KAAKlF,EAAM4C,eACX,KAAK5C,EAAMgD,eACTuP,EAAMrN,SAAU,EAChBqN,EAAM5P,MAAQ0P,EAAO5P,QAAQE,MAC7B,MACF,KAAK3C,EAAMmR,OACToB,EAAMlS,KAAO6R,GAAa7R,KAC1BkS,EAAMnL,cAAe,EACrB,MACF,QACE,OAAOpC,OCrCTkN,GAAsB,CAC1BnJ,IAAK,GACL7D,SAAS,EACTvC,MAAO,MAsCMyP,GAnCC,eAACpN,EAAD,uDAAgBkN,GAAcG,EAA9B,8CACdC,aAAQtN,GAAO,SAACuN,GACd,OAAQF,EAAO9P,MACb,KAAKvC,GAAM6R,sBACX,KAAK7R,GAAM2O,qBACX,KAAK3O,GAAM8P,wBACTyC,EAAMrN,SAAU,EAChBqN,EAAM5P,MAAQ,KACd,MACF,KAAK3C,GAAM2N,sBACT4E,EAAMrN,SAAU,EAChBqN,EAAMxJ,IAAMsJ,EAAO5P,QAAQ0G,KAAK5C,KAAI,SAACN,GAAD,OAAawH,OAAOxH,MACxD,MACF,KAAKjG,GAAM+N,qBACTwE,EAAMrN,SAAU,EAChBqN,EAAMxJ,IAAN,uBAAgB/D,EAAM+D,KAAtB,CAA2B0E,OAAO4E,EAAO5P,QAAQwD,MACjD,MACF,KAAKjG,GAAMmO,wBACToE,EAAMrN,SAAU,EAChB,IAAMwN,EAAW1N,EAAM+D,IAAI5G,QACzB,SAAC8D,GAAD,OAAgBA,IAAOoM,EAAO5P,QAAQwD,MAExCsM,EAAMxJ,IAAM2J,EACZ,MACF,KAAK1S,GAAM6N,sBACX,KAAK7N,GAAMiO,qBACX,KAAKjO,GAAMqO,wBACTkE,EAAMrN,SAAU,EAChBqN,EAAM5P,MAAQ0P,EAAO5P,QAAQE,MAC7B,MACF,QACE,OAAOqC,OC7BA2N,GAPEC,aAAgB,CAC/BnK,OAAQoK,GACRxS,KAAMyS,GACN/F,UAAWgG,KCCb,IAAMC,GCLC,WACL,IAAIC,EAAmBC,KAUjBC,EAAc,CAACC,MACfC,EAAY,CAACC,KAAe,WAAf,EAAmBH,IAGtC,OAFcI,aAAYZ,GAAUM,EAAgB,WAAhB,EAAoBI,IDR5CG,GAEdC,IAASnE,OACP,kBAAC,IAAMoE,WAAP,KACE,kBAAC,KAAD,KACE,kBAAC,IAAD,CAAUV,MAAOA,IACf,kBAAC,GAAD,SAINW,SAASC,eAAe,SLqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlQ,MAAK,SAACmQ,GACLA,EAAaC,gBAEdC,OAAM,SAACvR,GACN9B,QAAQ8B,MAAMA,EAAMkE,c","file":"static/js/main.ad4422a8.chunk.js","sourcesContent":["export enum Types {\n  SIGNUP_REQUEST = '@@signup/request',\n  SIGNUP_SUCCESS = '@@signup/success',\n  SIGNUP_FAILURE = '@@signup/failure',\n\n  SIGNIN_REQUEST = '@@signin/request',\n  SIGNIN_SUCCESS = '@@signin/success',\n  SIGNIN_FAILURE = '@@signin/failure',\n\n  LOGOUT = '@@logout',\n}\n\nexport type State = {\n  user: User;\n  isAuthorized: boolean;\n  loading: boolean;\n  error: Error | null;\n};\n\nexport type User = {\n  firstName: string;\n  lastName: string;\n  email: string;\n  gender: string;\n  password: string;\n};\n","import { User } from 'src/modules/user/types';\n\nconst db = window.localStorage;\nconst dbName = 'users';\nconst signedDbName = 'signed';\n\nexport function signUp<T>(user: any): Promise<T> {\n  return new Promise((resolve, reject) => {\n    try {\n      const isEmailDupl = isDuplicate(user);\n      console.log(isEmailDupl);\n\n      if (isEmailDupl) {\n        throw new Error('User with this email already exists');\n      } else {\n        addUser(user);\n        addUserToSigned(user);\n        resolve(user);\n      }\n    } catch (err) {\n      console.log(err);\n\n      reject(err);\n    }\n  });\n}\n\nexport function signIn<T>({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}): Promise<T> {\n  return new Promise((resolve, reject) => {\n    try {\n      const user = getUser(email);\n      if (!user) {\n        throw new Error('User not found');\n      } else if (user.password === password) {\n        addUserToSigned(user);\n        resolve(user);\n      }\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport function reAuth<T>(): Promise<T> {\n  return new Promise((resolve, reject) => {\n    try {\n      const signedUser = JSON.parse(db.getItem(signedDbName) || 'false');\n      if (signedUser) {\n        resolve(signedUser);\n      } else {\n        throw new Error('Session Expired');\n      }\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport function update(user: User): Promise<User> {\n  return new Promise((resolve, reject) => {\n    try {\n      const users = JSON.parse(db.getItem(dbName) || '[]');\n\n      removeUserFromSigned();\n      db.removeItem(dbName);\n\n      db.setItem(signedDbName, JSON.stringify(user));\n      const newUsers = users.filter(\n        (dbUser: any) => dbUser.email !== user.email\n      );\n      newUsers.push(user);\n      db.setItem(dbName, JSON.stringify(newUsers));\n      resolve(user);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport function logout() {\n  return new Promise((resolve, reject) => {\n    try {\n      removeUserFromSigned();\n      resolve();\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction removeUserFromSigned() {\n  const signed = JSON.parse(db.getItem(signedDbName) || 'false');\n  if (signed) {\n    db.removeItem(signedDbName);\n  }\n}\n\nfunction addUserToSigned(user: any) {\n  const signed = JSON.parse(db.getItem(signedDbName) || 'false');\n  if (signed) {\n    db.removeItem(signedDbName);\n  }\n  db.setItem(signedDbName, JSON.stringify(user));\n}\n\nfunction addUser(user: any) {\n  const users = JSON.parse(db.getItem(dbName) || '[]');\n\n  const isDbExist = Array.isArray(users) && users.length > 0;\n\n  if (!isDbExist) {\n    db.setItem(dbName, JSON.stringify([user]));\n  } else {\n    users.push(user);\n    db.setItem(dbName, JSON.stringify(users));\n  }\n}\n\nfunction isDuplicate(user: any) {\n  const duplicateUser = getUser(user.email);\n\n  if (duplicateUser) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getUser(email: string) {\n  const users = JSON.parse(db.getItem('users') || '[]');\n\n  if (Array.isArray(users) && users.length > 0) {\n    return users.find((user: any) => user.email === email);\n  }\n\n  return false;\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nimport { RootState } from '../reducers';\nimport { Types, User } from './types';\nimport { signUp, signIn, reAuth, logout, update } from 'src/api/auth-mock';\n\nexport function signUpRequest(\n  user: any\n): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    dispatch({ type: Types.SIGNUP_REQUEST });\n\n    signUp<User>(user).then(\n      (user: User) => {\n        dispatch(signUpSuccess(user));\n      },\n      (error: Error) => {\n        dispatch(signUpFailure(error));\n      }\n    );\n  };\n}\n\nexport function signUpSuccess(user: User) {\n  return {\n    type: Types.SIGNUP_SUCCESS,\n    payload: {\n      user,\n    },\n  };\n}\n\nexport function signUpFailure(error: Error) {\n  return {\n    type: Types.SIGNUP_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n\nexport function signInRequest({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    dispatch({ type: Types.SIGNIN_REQUEST });\n\n    signIn<User>({ email, password }).then(\n      (user: User) => {\n        dispatch(signInSuccess(user));\n      },\n      (error: Error) => {\n        dispatch(signInFailure(error));\n      }\n    );\n  };\n}\n\nexport function reAuthRequest(): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> {\n  return async (dispatch) => {\n    dispatch({ type: Types.SIGNIN_REQUEST });\n\n    reAuth().then(\n      (user: any) => {\n        dispatch(signInSuccess(user as User));\n      },\n      (error: Error) => {\n        dispatch(signInFailure(error));\n      }\n    );\n  };\n}\n\nexport function signInSuccess(user: User) {\n  return {\n    type: Types.SIGNIN_SUCCESS,\n    payload: {\n      user,\n    },\n  };\n}\n\nexport function signInFailure(error: Error) {\n  return {\n    type: Types.SIGNIN_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n\nexport function logoutAction(): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> {\n  return async (dispatch) => {\n    logout().then(\n      () => {\n        dispatch(logoutSuccess());\n      },\n      (error: Error) => {\n        console.error(error);\n      }\n    );\n  };\n}\n\nexport function logoutSuccess() {\n  return {\n    type: Types.LOGOUT,\n  };\n}\n\nexport function updateProfile(\n  user: User\n): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    update(user).then(\n      (user: User) => {\n        dispatch(signUpSuccess(user));\n      },\n      (error: Error) => {\n        dispatch(signUpFailure(error));\n      }\n    );\n  };\n}\n","import * as Yup from 'yup';\n\nexport const signInSchema = Yup.object({\n  email: Yup.string()\n    .email('Please enter a valid email')\n    .required('Please enter a valid email'),\n  password: Yup.string().min(4).required('Please enter your password'),\n});\n\nexport const signUpSchema = Yup.object({\n  firstName: Yup.string().min(4).required('Please enter your first name'),\n  lastName: Yup.string().min(4).required('Please enter your last name'),\n  email: Yup.string()\n    .email('Please enter a valid email')\n    .required('Please enter a valid email'),\n  gender: Yup.string().required(''),\n  password: Yup.string().min(4).required('Please enter your password'),\n  passwordConfirm: Yup.string().when('password', {\n    is: (val: string) => (val && val.length > 0 ? true : false),\n    then: Yup.string().oneOf(\n      [Yup.ref('password')],\n      'Both passwords need to be the same'\n    ),\n  }),\n});\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFormik } from 'formik';\nimport {\n  InputLabel,\n  Input,\n  NativeSelect,\n  Button,\n  FormHelperText,\n  CircularProgress,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signUpRequest } from 'src/modules/user/actions';\nimport { RootState } from 'src/modules/reducers';\nimport { signUpSchema } from 'src/utils/schemas';\n\nconst genders = ['Female', 'Male'];\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  gender: '',\n  password: '',\n  passwordConfirm: '',\n};\n\nconst Form = styled.form`\n  padding: 15px;\n  .MuiInputBase-root {\n    display: block;\n    margin-bottom: 20px;\n  }\n`;\nconst FormTitle = styled.h2`\n  margin: 0 0 20px 0;\n`;\n\nconst StyledButton = styled(Button)`\n  margin: 0 auto;\n  display: block;\n`;\n\nfunction SignUpForm() {\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const dispatch = useDispatch();\n  const { loading: authLoading, error: authError } = useSelector(\n    (state: RootState) => state.user\n  );\n\n  const { handleChange, handleSubmit, values, errors, touched } = useFormik({\n    initialValues,\n    validationSchema: signUpSchema,\n    onSubmit: submitForm,\n  });\n\n  function submitForm(values: any) {\n    dispatch(\n      signUpRequest({\n        firstName: values.firstName,\n        lastName: values.lastName,\n        email: values.email,\n        gender: values.gender,\n        password: values.password,\n      })\n    );\n    setIsSubmitted(true);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormTitle>Sign Up</FormTitle>\n      <div>\n        <InputLabel htmlFor=\"firstName\">First name</InputLabel>\n        <Input\n          id=\"firstName\"\n          value={values.firstName}\n          onChange={handleChange}\n        />\n        <FormHelperText error={true}>\n          {touched.firstName && errors.firstName}\n        </FormHelperText>\n      </div>\n      <div>\n        <InputLabel htmlFor=\"lastName\">Last name</InputLabel>\n        <Input id=\"lastName\" value={values.lastName} onChange={handleChange} />\n        <FormHelperText error={true}>\n          {touched.lastName && errors.lastName}\n        </FormHelperText>\n      </div>\n      <div>\n        <InputLabel htmlFor=\"email\">Email</InputLabel>\n        <Input id=\"email\" value={values.email} onChange={handleChange} />\n        <FormHelperText error={true}>\n          {touched.email && errors.email}\n        </FormHelperText>\n      </div>\n      <div>\n        <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n        <NativeSelect\n          value={values.gender}\n          onChange={handleChange}\n          id=\"gender\"\n          inputProps={{ 'aria-label': 'gender' }}\n        >\n          <option value=\"none\">None</option>\n          {genders.map((gender: string) => (\n            <option value={gender}>{gender}</option>\n          ))}\n        </NativeSelect>\n      </div>\n      <div>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={values.password}\n          onChange={handleChange}\n        />\n        <FormHelperText error={true}>\n          {touched.password && errors.password}\n        </FormHelperText>\n      </div>\n      <div>\n        <InputLabel htmlFor=\"passwordConfirm\">Confirm password</InputLabel>\n        <Input\n          type=\"password\"\n          id=\"passwordConfirm\"\n          value={values.passwordConfirm}\n          onChange={handleChange}\n        />\n        <FormHelperText error={true}>\n          {touched.passwordConfirm && errors.passwordConfirm}\n        </FormHelperText>\n      </div>\n      <div>\n        <StyledButton type=\"submit\" color=\"primary\" variant=\"contained\">\n          Sign Up\n        </StyledButton>\n        {authLoading ? <CircularProgress /> : null}\n      </div>\n      <FormHelperText style={{ marginTop: '20px' }} error={true}>\n        {isSubmitted ? authError?.message || '' : null}\n      </FormHelperText>\n    </Form>\n  );\n}\n\nexport default SignUpForm;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { useFormik } from 'formik';\nimport {\n  InputLabel,\n  Input,\n  FormHelperText,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from 'src/modules/reducers';\nimport { signInRequest } from 'src/modules/user/actions';\nimport { signInSchema } from 'src/utils/schemas';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nconst Form = styled.form`\n  padding: 15px;\n  .MuiInputBase-root {\n    display: block;\n    margin-bottom: 20px;\n  }\n`;\n\nconst FormTitle = styled.h2`\n  margin: 0 0 20px 0;\n`;\n\nconst StyledButton = styled(Button)`\n  margin: 0 auto;\n  display: block;\n`;\n\nfunction SignInForm() {\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const dispatch = useDispatch();\n  const { loading: authLoading, error: authError } = useSelector(\n    (state: RootState) => state.user\n  );\n\n  const { handleChange, handleSubmit, values, errors, touched } = useFormik({\n    initialValues,\n    validationSchema: signInSchema,\n    onSubmit: submitForm,\n  });\n\n  function submitForm(values: any) {\n    dispatch(\n      signInRequest({\n        email: values.email,\n        password: values.password,\n      })\n    );\n    setIsSubmitted(true);\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormTitle>Sign In</FormTitle>\n      <div>\n        <InputLabel htmlFor=\"email\">Email</InputLabel>\n        <Input id=\"email\" value={values.email} onChange={handleChange} />\n        <FormHelperText error={true}>\n          {touched.email && errors.email}\n        </FormHelperText>\n      </div>\n      <div>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          type=\"password\"\n          id=\"password\"\n          value={values.password}\n          onChange={handleChange}\n        />\n        <FormHelperText error={true}>\n          {touched.password && errors.password}\n        </FormHelperText>\n      </div>\n      <div>\n        <StyledButton type=\"submit\" color=\"primary\" variant=\"contained\">\n          Sign Up\n        </StyledButton>\n        {authLoading ? <CircularProgress /> : null}\n      </div>\n      <FormHelperText style={{ marginTop: '20px' }} error={true}>\n        {isSubmitted ? authError?.message || '' : null}\n      </FormHelperText>\n    </Form>\n  );\n}\n\nexport default SignInForm;\n","import React from 'react';\nimport { Paper, Grid } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { RootState } from 'src/modules/reducers';\nimport SignUpForm from './sign-up-form';\nimport SignInForm from './sign-in-form';\n\nfunction LoginPage() {\n  const history = useHistory();\n  const isAuthorized = useSelector(\n    (state: RootState) => state.user.isAuthorized\n  );\n\n  React.useEffect(() => {\n    if (isAuthorized) {\n      history.push('/movies');\n    }\n  }, [history, isAuthorized]);\n\n  return (\n    <Grid container spacing={5}>\n      <Grid item sm={12} md={6}>\n        <Paper>\n          <SignUpForm />\n        </Paper>\n      </Grid>\n      <Grid item sm={12} md={6}>\n        <Paper>\n          <SignInForm />\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default LoginPage;\n","export type State = {\n  data: ResponseData;\n  loading: boolean;\n  error: Error | null;\n  query: string;\n};\n\nexport type ResponseData = {\n  page: number;\n  results: Movie[];\n  total_pages: number;\n  total_results: number;\n};\n\nexport type Movie = {\n  adult: boolean;\n  backdrop_path: string | null;\n  genre_ids: number[];\n  id: number;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string | null;\n  release_date: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n};\n\nexport enum Types {\n  SEARCH_MOVIE_REQUEST = '@@search-movie/request',\n  SEARCH_MOVIE_SUCCESS = '@@search-movie/success',\n  SEARCH_MOVIE_FAILURE = '@@search-movie/failure',\n\n  GET_MOVIE_REQUEST = '@@get-movie/request',\n  GET_MOVIE_SUCCESS = '@@get-movie/success',\n  GET_MOVIE_FAILURE = '@@get-movie/failure',\n\n  GET_MOVIES_REQUEST = '@@get-movies/request',\n  GET_MOVIES_SUCCESS = '@@get-movies/success',\n  GET_MOVIES_FAILURE = '@@get-movies/failure',\n\n  FETCH_MORE_REQUEST = '@@fetch-more/request',\n  FETCH_MORE_SUCCESS = '@@fetch-more/success',\n  FETCH_MORE_FAILURE = '@@fetch-more/failure',\n\n  PUSH_MOVIES = '@@push-movies',\n}\n","import { ResponseData, Movie } from 'src/modules/movies/types';\n\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY;\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst headers = {\n  'content-type': 'application/json',\n};\n\nasync function get<T>(url: string): Promise<T> {\n  const response = await fetch(url, {\n    headers,\n  });\n\n  const json = await response.json();\n\n  if (response.ok) {\n    return json;\n  } else {\n    throw new Error(json.message);\n  }\n}\n\nexport async function searchMoviesByQuery(query: string) {\n  let url = `${API_URL}/search/movie?api_key=${API_KEY}&query=${query}`;\n\n  if (!query) {\n    url = `${API_URL}/movie/popular?api_key=${API_KEY}`;\n  }\n\n  const movies = await get<ResponseData>(url);\n  return movies;\n}\n\nexport async function fetchMore(query: string, page: number) {\n  let url = `${API_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`;\n\n  if (!query) {\n    url = `${API_URL}/movie/popular?api_key=${API_KEY}&page=${page}`;\n  }\n\n  const movies = await get<ResponseData>(url);\n  return movies;\n}\n\nexport async function getMovieById(id: number) {\n  const url = `${API_URL}/movie/${id}?api_key=${API_KEY}`;\n  const movie = await get<Movie>(url);\n\n  return movie;\n}\n\nexport async function getMovies(ids: number[]) {\n  return await Promise.all(\n    ids.map(async (id: number) => {\n      const response = await getMovieById(id);\n      return response;\n    })\n  );\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nimport { RootState } from '../reducers';\nimport { Types, ResponseData, Movie } from './types';\nimport {\n  searchMoviesByQuery,\n  getMovieById,\n  fetchMore,\n  getMovies,\n} from 'src/api';\n\nexport function searchMovieRequest(\n  query: string\n): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    dispatch({ type: Types.SEARCH_MOVIE_REQUEST, payload: { query } });\n\n    searchMoviesByQuery(query).then(\n      (data: ResponseData) => {\n        dispatch(searchMovieSuccess(data));\n      },\n      (error: Error) => {\n        dispatch(searchMovieFailure(error));\n      }\n    );\n  };\n}\n\nexport function searchMovieSuccess(data: ResponseData) {\n  return {\n    type: Types.SEARCH_MOVIE_SUCCESS,\n    payload: {\n      data,\n    },\n  };\n}\n\nexport function searchMovieFailure(error: Error) {\n  return {\n    type: Types.SEARCH_MOVIE_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n\nexport function getMovieRequest(\n  id: number\n): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    dispatch({ type: Types.GET_MOVIE_REQUEST });\n\n    getMovieById(id).then(\n      (movie: Movie) => {\n        dispatch(getMovieSuccess(movie));\n      },\n      (error: Error) => {\n        dispatch(getMovieFailure(error));\n      }\n    );\n  };\n}\n\nexport function getMovieSuccess(movie: Movie) {\n  return {\n    type: Types.GET_MOVIE_SUCCESS,\n    payload: {\n      movie,\n    },\n  };\n}\n\nexport function getMovieFailure(error: Error) {\n  return {\n    type: Types.GET_MOVIE_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n\nexport function fetchMoreRequest(\n  query: string,\n  page: number\n): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    dispatch({ type: Types.FETCH_MORE_REQUEST });\n\n    fetchMore(query, page).then(\n      (data: ResponseData) => {\n        dispatch(fetchMoreSuccess(data));\n      },\n      (error: Error) => {\n        dispatch(searchMovieFailure(error));\n      }\n    );\n  };\n}\n\nexport function fetchMoreSuccess(data: ResponseData) {\n  return {\n    type: Types.FETCH_MORE_SUCCESS,\n    payload: {\n      data,\n    },\n  };\n}\n\nexport function getMoviesRequest(\n  ids: number[]\n): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    dispatch({ type: Types.GET_MOVIES_REQUEST });\n\n    getMovies(ids).then(\n      (data: Movie[]) => {\n        dispatch(getMoviesSuccess(data));\n      },\n      (error: Error) => {\n        dispatch(getMoviesFailure(error));\n      }\n    );\n  };\n}\n\nexport function getMoviesSuccess(data: Movie[]) {\n  return {\n    type: Types.GET_MOVIES_SUCCESS,\n    payload: {\n      data,\n    },\n  };\n}\n\nexport function getMoviesFailure(error: Error) {\n  return {\n    type: Types.GET_MOVIES_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\ntype Props = {\n  path: string | null;\n  alt: string;\n};\n\nconst Wrapper = styled.img`\n  max-width: 100%;\n  width: auto;\n  height: auto;\n  display: block;\n`;\n\nfunction Poster({ path, alt }: Props) {\n  const [posterUrl, setPosterUrl] = React.useState(\n    'https://via.placeholder.com/400x640'\n  );\n  React.useEffect(() => {\n    // TODO:\n    let controller = new AbortController();\n    (async () => {\n      if (path !== null) {\n        try {\n          const response = await fetch(\n            `https://image.tmdb.org/t/p/w500/${path}`,\n            { signal: controller.signal }\n          );\n\n          if (response.ok && response.url) {\n            setPosterUrl(response.url);\n          }\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    })();\n    return () => {\n      controller.abort();\n    };\n  }, [path]);\n  return <Wrapper src={posterUrl} alt={alt} />;\n}\n\nexport default Poster;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nimport Poster from './poster';\n\ntype Props = {\n  id: number;\n  title: string;\n  poster: string | null;\n};\n\nconst Wrapper = styled(Link)``;\n\nconst Title = styled.h3``;\n\nfunction MovieCard({ id, title, poster }: Props) {\n  return (\n    <Wrapper to={`/movies/${id}`}>\n      <Poster path={poster} alt={title} />\n      <Title>{title}</Title>\n    </Wrapper>\n  );\n}\n\nexport default MovieCard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Grid } from '@material-ui/core';\n\ntype Props = {};\n\nconst MovieCardPlaceholder = styled.div``;\n\nconst Poster = styled.div`\n  max-width: 400px;\n  max-height: 640px;\n  width: 100%;\n  height: 100%;\n  background-color: grey;\n`;\n\nfunction MoviesLoading() {\n  const placeholder = Array(15);\n\n  return (\n    <Grid container spacing={5}>\n      {placeholder.map((_: any, idx: number) => (\n        <Grid item key={idx} xs={12} sm={6} md={4}>\n          <MovieCardPlaceholder>\n            <Poster />\n          </MovieCardPlaceholder>\n        </Grid>\n      ))}\n    </Grid>\n  );\n}\n\nexport default MoviesLoading;\n","import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from 'src/modules/reducers';\nimport { Movie } from 'src/modules/movies/types';\nimport {\n  searchMovieRequest,\n  fetchMoreRequest,\n} from 'src/modules/movies/actions';\n\nimport MovieCard from '../movie-card';\nimport MoviesLoading from '../movies-loading';\n\nfunction MoviesPage() {\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = React.useState(0);\n  const { data, loading, error, query } = useSelector(\n    (state: RootState) => state.movies\n  );\n\n  React.useEffect(() => {\n    dispatch(searchMovieRequest(''));\n  }, [dispatch]);\n\n  React.useEffect(() => {\n    if (\n      data.total_results > currentPage * 15 &&\n      data.results.length < currentPage * 21\n    ) {\n      dispatch(fetchMoreRequest(query, data.page + 1));\n    }\n  }, [\n    dispatch,\n    currentPage,\n    data.results,\n    data.page,\n    data.total_results,\n    query,\n  ]);\n\n  function prevPage() {\n    setCurrentPage(currentPage - 1);\n  }\n\n  function nextPage() {\n    setCurrentPage(currentPage + 1);\n  }\n\n  if (loading) {\n    return <MoviesLoading />;\n  }\n  if (error) {\n    return <span>{error.message}</span>;\n  }\n\n  const movies = data.results.slice(15 * currentPage, 15 * (currentPage + 1));\n\n  return (\n    <Grid container spacing={5}>\n      {movies.map((movie: Movie) => (\n        <Grid item key={movie.id} xs={12} sm={6} md={4}>\n          <MovieCard\n            id={movie.id}\n            title={movie.title}\n            poster={movie.poster_path}\n          />\n        </Grid>\n      ))}\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ margin: '20px 0 40px 0' }}\n      >\n        <Button disabled={currentPage === 0} onClick={() => prevPage()}>\n          prev page\n        </Button>\n        <span style={{ padding: '0 20px' }}>{currentPage + 1}</span>\n        <Button\n          disabled={(currentPage + 1) * 15 >= data.total_results}\n          onClick={() => nextPage()}\n        >\n          next page\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default MoviesPage;\n","export type State = {\n  ids: number[];\n  loading: boolean;\n  error: Error | null;\n};\n\nexport enum Types {\n  GET_FAVORITES_REQUEST = '@@get-favorites/request',\n  GET_FAVORITES_SUCCESS = '@@get-favorites/success',\n  GET_FAVORITES_FAILURE = '@@get-favorites/failure',\n\n  ADD_FAVORITE_REQUEST = '@@add-favorite/request',\n  ADD_FAVORITE_SUCCESS = '@@add-favorite/success',\n  ADD_FAVORITE_FAILURE = '@@add-favorite/failure',\n\n  DELETE_FAVORITE_REQUEST = '@@delete-favorite/request',\n  DELETE_FAVORITE_SUCCESS = '@@delete-favorite/success',\n  DELETE_FAVORITE_FAILURE = '@@delete-favorite/failure',\n}\n","/* eslint-disable eqeqeq */\nconst db = window.localStorage;\nconst dbName = 'favorites';\n\nexport function addFavoriteMovie(movieId: number): Promise<number> {\n  return new Promise((resolve, reject) => {\n    try {\n      const isMovieInFavorites = isDuplicate(movieId);\n\n      if (isMovieInFavorites) {\n        throw new Error('This movie already in favorites list');\n      } else {\n        addItem(movieId);\n        resolve(movieId);\n      }\n    } catch (err) {\n      console.log(err);\n\n      reject(err);\n    }\n  });\n}\n\nexport function getFavoriteMovies(): Promise<number[]> {\n  return new Promise((resolve, reject) => {\n    try {\n      const ids = getList();\n      resolve(ids);\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nexport function deleteFavoriteMovie(id: number): Promise<number> {\n  return new Promise((resolve, reject) => {\n    try {\n      deleteItem(id);\n      resolve(Number(id));\n    } catch (err) {\n      reject(err);\n    }\n  });\n}\n\nfunction deleteItem(movieId: number) {\n  const favorites = JSON.parse(db.getItem(dbName) || '[]');\n  const favoriteIdx = favorites.findIndex(\n    (id: string | number) => id == movieId\n  );\n  const newFavorites = [\n    ...favorites.slice(0, favoriteIdx),\n    ...favorites.slice(favoriteIdx + 1),\n  ];\n  db.setItem(dbName, JSON.stringify(newFavorites));\n}\n\nfunction addItem(movieId: number) {\n  const favorites = JSON.parse(db.getItem(dbName) || '[]');\n  const isDbExist = Array.isArray(favorites) && favorites.length > 0;\n\n  if (!isDbExist) {\n    db.setItem(dbName, JSON.stringify([movieId]));\n  } else {\n    favorites.push(movieId);\n    db.setItem(dbName, JSON.stringify(favorites));\n  }\n}\n\nfunction isDuplicate(movieId: number) {\n  const duplicate = getMovie(movieId);\n  console.log(duplicate);\n\n  if (duplicate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction getMovie(movieId: number) {\n  const favorites = JSON.parse(db.getItem(dbName) || '[]');\n\n  if (Array.isArray(favorites) && favorites.length > 0) {\n    return favorites.find((id: string | number) => id == movieId);\n  }\n}\n\nfunction getList() {\n  const favorites = JSON.parse(db.getItem(dbName) || '[]');\n\n  if (Array.isArray(favorites) && favorites.length > 0) {\n    return favorites;\n  }\n\n  return [];\n}\n","import { ThunkAction } from 'redux-thunk';\nimport { Action } from 'redux';\n\nimport { RootState } from '../reducers';\nimport { Types } from './types';\nimport {\n  addFavoriteMovie,\n  getFavoriteMovies,\n  deleteFavoriteMovie,\n} from 'src/api/favorites-mock';\n\nexport function getFavoritesRequest(): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> {\n  return async (dispatch) => {\n    dispatch({ type: Types.GET_FAVORITES_REQUEST });\n\n    getFavoriteMovies().then(\n      (data: number[]) => {\n        dispatch(getFavoritesSuccess(data));\n      },\n      (error: Error) => {\n        dispatch(getFavoritesFailure(error));\n      }\n    );\n  };\n}\n\nexport function getFavoritesSuccess(data: number[]) {\n  return {\n    type: Types.GET_FAVORITES_SUCCESS,\n    payload: {\n      data,\n    },\n  };\n}\n\nexport function getFavoritesFailure(error: Error) {\n  return {\n    type: Types.GET_FAVORITES_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n\nexport function addFavoriteRequest(\n  id: number\n): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    dispatch({ type: Types.ADD_FAVORITE_REQUEST });\n\n    addFavoriteMovie(id).then(\n      (movieId: number) => {\n        dispatch(addFavoriteSuccess(movieId));\n      },\n      (error: Error) => {\n        dispatch(addFavoriteFailure(error));\n      }\n    );\n  };\n}\n\nexport function addFavoriteSuccess(id: number) {\n  return {\n    type: Types.ADD_FAVORITE_SUCCESS,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function addFavoriteFailure(error: Error) {\n  return {\n    type: Types.ADD_FAVORITE_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n\nexport function deleteFavoriteRequest(\n  id: number\n): ThunkAction<void, RootState, unknown, Action<string>> {\n  return async (dispatch) => {\n    dispatch({ type: Types.DELETE_FAVORITE_REQUEST });\n\n    deleteFavoriteMovie(id).then(\n      (movieId: number) => {\n        dispatch(deleteFavoriteSuccess(movieId));\n      },\n      (error: Error) => {\n        dispatch(deleteFavoriteFailure(error));\n      }\n    );\n  };\n}\n\nexport function deleteFavoriteSuccess(id: number) {\n  return {\n    type: Types.DELETE_FAVORITE_SUCCESS,\n    payload: {\n      id,\n    },\n  };\n}\n\nexport function deleteFavoriteFailure(error: Error) {\n  return {\n    type: Types.DELETE_FAVORITE_FAILURE,\n    payload: {\n      error,\n    },\n  };\n}\n","import { useSelector } from 'react-redux';\nimport { RootState } from 'src/modules/reducers';\n\nexport default function useAuth() {\n  const { user, isAuthorized } = useSelector((state: RootState) => state.user);\n\n  return { user, isAuthorized };\n}\n","import React from 'react';\nimport { Grid, Paper, Button, CircularProgress } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nimport { RootState } from 'src/modules/reducers';\nimport { Movie } from 'src/modules/movies/types';\nimport { getMovieRequest } from 'src/modules/movies/actions';\nimport { addFavoriteRequest } from 'src/modules/favorites/actions';\nimport useAuth from 'src/hooks/use-auth';\n\nimport Poster from 'src/components/poster';\n\nfunction MoviePage() {\n  const { id: movieId } = useParams();\n  const dispatch = useDispatch();\n\n  const { isAuthorized } = useAuth();\n  const movie = useSelector((state: RootState) =>\n    state.movies.data.results.find(\n      (movie: Movie) => movie.id === Number(movieId)\n    )\n  );\n  const { loading, error } = useSelector((state: RootState) => state.movies);\n  const isFavorite = useSelector(\n    (state: RootState) =>\n      state.favorites.ids.findIndex((id: number) => id === Number(movieId)) !==\n      -1\n  );\n\n  React.useEffect(() => {\n    if (!movie) {\n      dispatch(getMovieRequest(Number(movieId)));\n    }\n  }, [dispatch, movie, movieId]);\n\n  function addToFavorites() {\n    dispatch(addFavoriteRequest(movieId));\n  }\n\n  if (loading) {\n    return <CircularProgress />;\n  }\n\n  if (error) {\n    return <span>{error.message}</span>;\n  }\n\n  if (!movie) {\n    return <span>not found</span>;\n  }\n\n  return (\n    <Paper style={{ padding: '15px' }}>\n      <Grid container spacing={5}>\n        <Grid item md={3}>\n          <Poster path={movie.poster_path} alt={movie.title} />\n        </Grid>\n        <Grid item md={9}>\n          <h2>{movie.title}</h2>\n          <div>{new Date(movie.release_date).toLocaleDateString()}</div>\n          <p>{movie.overview}</p>\n          {isAuthorized ? (\n            <Button\n              disabled={isFavorite}\n              onClick={() => addToFavorites()}\n              color=\"primary\"\n              variant=\"contained\"\n            >\n              {isFavorite ? 'In favorites' : 'Add to favorites'}\n            </Button>\n          ) : null}\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default MoviePage;\n","import React from 'react';\nimport {\n  Route,\n  Redirect,\n  RouteComponentProps,\n  RouteProps,\n} from 'react-router-dom';\n\nimport useAuth from 'src/hooks/use-auth';\n\ntype Props = {\n  component: React.ComponentType<RouteComponentProps>;\n} & RouteProps;\n\nexport default function PrivateRoute(props: Props) {\n  const { isAuthorized } = useAuth();\n\n  const { component: Component, ...rest } = props;\n\n  if (!isAuthorized) {\n    return null;\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={(componentProps) =>\n        isAuthorized ? (\n          <Component {...componentProps} />\n        ) : (\n          <Redirect to=\"/login\" />\n        )\n      }\n    />\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  Grid,\n  Paper,\n  InputLabel,\n  Input,\n  FormHelperText,\n  NativeSelect,\n  Button,\n  CircularProgress,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport useAuth from 'src/hooks/use-auth';\nimport { signUpSchema } from 'src/utils/schemas';\nimport { RootState } from 'src/modules/reducers';\nimport { updateProfile } from 'src/modules/user/actions';\n\nconst genders = ['Female', 'Male'];\n\nconst Form = styled.form`\n  width: 100%;\n  margin: 0 auto;\n  .MuiInputBase-root {\n    display: block;\n    margin-bottom: 20px;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin: auto;\n  display: block;\n`;\n\nfunction ProfilePage() {\n  const { user } = useAuth();\n  const [isSubmitted, setIsSubmitted] = React.useState(false);\n  const dispatch = useDispatch();\n  const { loading: authLoading, error: authError } = useSelector(\n    (state: RootState) => state.user\n  );\n\n  const initialValues = { ...user, passwordConfirm: user.password };\n  const {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    touched,\n    dirty,\n  } = useFormik({\n    initialValues,\n    validationSchema: signUpSchema,\n    onSubmit: submitForm,\n  });\n\n  function submitForm(values: any) {\n    dispatch(\n      updateProfile({\n        firstName: values.firstName,\n        lastName: values.lastName,\n        email: values.email,\n        gender: values.gender,\n        password: values.password,\n      })\n    );\n    setIsSubmitted(true);\n  }\n\n  return (\n    <Paper style={{ padding: '15px' }}>\n      <Grid container spacing={5}>\n        <Grid item xs={12} md={6}>\n          <h2>Profile settings</h2>\n          <Form onSubmit={handleSubmit}>\n            <div>\n              <InputLabel htmlFor=\"firstName\">First name</InputLabel>\n              <Input\n                id=\"firstName\"\n                value={values.firstName}\n                onChange={handleChange}\n              />\n              <FormHelperText error={true}>\n                {touched.firstName && errors.firstName}\n              </FormHelperText>\n            </div>\n            <div>\n              <InputLabel htmlFor=\"lastName\">Last name</InputLabel>\n              <Input\n                id=\"lastName\"\n                value={values.lastName}\n                onChange={handleChange}\n              />\n              <FormHelperText error={true}>\n                {touched.lastName && errors.lastName}\n              </FormHelperText>\n            </div>\n            <div>\n              <InputLabel htmlFor=\"email\">Email</InputLabel>\n              <Input id=\"email\" value={values.email} onChange={handleChange} />\n              <FormHelperText error={true}>\n                {touched.email && errors.email}\n              </FormHelperText>\n            </div>\n            <div>\n              <InputLabel htmlFor=\"gender\">Gender</InputLabel>\n              <NativeSelect\n                value={values.gender}\n                onChange={handleChange}\n                id=\"gender\"\n                inputProps={{ 'aria-label': 'gender' }}\n              >\n                <option value=\"none\">None</option>\n                {genders.map((gender: string) => (\n                  <option value={gender}>{gender}</option>\n                ))}\n              </NativeSelect>\n            </div>\n            <div>\n              <InputLabel htmlFor=\"password\">Password</InputLabel>\n              <Input\n                type=\"password\"\n                id=\"password\"\n                value={values.password}\n                onChange={handleChange}\n              />\n              <FormHelperText error={true}>\n                {touched.password && errors.password}\n              </FormHelperText>\n            </div>\n            <div>\n              <InputLabel htmlFor=\"passwordConfirm\">\n                Confirm password\n              </InputLabel>\n              <Input\n                type=\"password\"\n                id=\"passwordConfirm\"\n                value={values.passwordConfirm}\n                onChange={handleChange}\n              />\n              <FormHelperText error={true}>\n                {touched.passwordConfirm && errors.passwordConfirm}\n              </FormHelperText>\n            </div>\n            <div>\n              <StyledButton\n                disabled={!dirty}\n                type=\"submit\"\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Save\n              </StyledButton>\n              {authLoading ? <CircularProgress /> : null}\n            </div>\n            <FormHelperText style={{ marginTop: '20px' }} error={true}>\n              {isSubmitted ? authError?.message || '' : null}\n            </FormHelperText>\n          </Form>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n\nexport default ProfilePage;\n","import React from 'react';\nimport {\n  Grid,\n  Button,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootState } from 'src/modules/reducers';\nimport { Movie } from 'src/modules/movies/types';\nimport { getMoviesRequest } from 'src/modules/movies/actions';\nimport { deleteFavoriteRequest } from 'src/modules/favorites/actions';\n\nimport Poster from '../poster';\n\nfunction FavoritesPage() {\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = React.useState(0);\n\n  const { ids } = useSelector((state: RootState) => state.favorites);\n  const { movies, loading, error } = useSelector((state: RootState) => ({\n    movies: state.movies.data.results.filter((movie: Movie) => {\n      return Array.isArray(ids) && ids.includes(movie.id);\n    }),\n    loading: state.movies.loading,\n    error: state.movies.error,\n  }));\n\n  React.useEffect(() => {\n    const hasMovies = ids.every(\n      (id: number) => !!movies.find((movie: Movie) => movie.id === id)\n    );\n\n    if (ids.length > 0 && !hasMovies && !loading) {\n      dispatch(getMoviesRequest(ids));\n    }\n  }, [dispatch, ids, movies, loading]);\n\n  function prevPage() {\n    setCurrentPage(currentPage - 1);\n  }\n\n  function nextPage() {\n    setCurrentPage(currentPage + 1);\n  }\n\n  function deleteFavorite(id: number) {\n    dispatch(deleteFavoriteRequest(id));\n  }\n\n  if (loading) {\n    return <span>loading...</span>;\n  }\n  if (error) {\n    return <span>{error.message}</span>;\n  }\n\n  const visibleMovies = movies.slice(currentPage * 10, (currentPage + 1) * 10);\n\n  return (\n    <Grid container spacing={5}>\n      <Grid item xs={12}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Poster</TableCell>\n              <TableCell>Title</TableCell>\n              <TableCell>Release date</TableCell>\n              <TableCell>Overview</TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {visibleMovies.map((movie: Movie) => (\n              <TableRow>\n                <TableCell>\n                  <Poster path={movie.poster_path} alt={movie.title} />\n                </TableCell>\n                <TableCell>{movie.title}</TableCell>\n                <TableCell>{movie.release_date}</TableCell>\n                <TableCell>{movie.overview}</TableCell>\n                <TableCell>\n                  <Button onClick={() => deleteFavorite(movie.id)}>\n                    DELETE\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Grid>\n      <Grid item xs={12}>\n        <Button disabled={currentPage === 0} onClick={() => prevPage()}>\n          prev page\n        </Button>\n        {currentPage + 1}\n        <Button\n          disabled={(currentPage + 1) * 10 >= movies.length}\n          onClick={() => nextPage()}\n        >\n          next page\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default FavoritesPage;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport LoginPage from './components/pages/login-page';\nimport MoviesPage from './components/pages/movies-page';\nimport MoviePage from './components/pages/movie-page';\nimport PrivateRoute from './components/private-route';\nimport ProfilePage from './components/pages/profile-page';\nimport FavoritesPage from './components/pages/favorites-page';\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={MoviesPage} />\n      <Route exact path=\"/login\" component={LoginPage} />\n      <Route exact path=\"/movies\" component={MoviesPage} />\n      <Route exact path=\"/movies/:id\" component={MoviePage} />\n      <PrivateRoute exact path=\"/profile\" component={ProfilePage} />\n      <PrivateRoute exact path=\"/favorites\" component={FavoritesPage} />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  children: React.ReactNode;\n};\n\nfunction ButtonLink({ to, children }: Props) {\n  return (\n    <Button\n      style={{ color: '#fff', fontWeight: 'bold' }}\n      component={Link}\n      to={to}\n    >\n      {children}\n    </Button>\n  );\n}\n\nexport default ButtonLink;\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  AppBar,\n  Toolbar,\n  InputLabel,\n  Input,\n  Button,\n  Container,\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { searchMovieRequest } from 'src/modules/movies/actions';\nimport useAuth from 'src/hooks/use-auth';\nimport { logoutAction } from 'src/modules/user/actions';\nimport ButtonLink from './button-link';\n\nconst schema = Yup.object({\n  query: Yup.string().min(2).required('Enter a movie title'),\n});\n\nconst initialValues = {\n  query: '',\n};\n\nconst StyledButton = styled(Button)`\n  color: #fff;\n  font-weight: bold;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  input,\n  button {\n    color: #fff;\n  }\n  button {\n    font-weight: bold;\n  }\n`;\n\nfunction Header() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { user, isAuthorized } = useAuth();\n\n  const { handleSubmit, handleChange, values } = useFormik({\n    initialValues,\n    validationSchema: schema,\n    onSubmit: (values: any) => submitQuerySearch(values),\n  });\n\n  function submitQuerySearch(values: any) {\n    dispatch(searchMovieRequest(values.query));\n    history.push('/movies');\n  }\n\n  function handleLogout() {\n    if (isAuthorized) {\n      dispatch(logoutAction());\n    }\n  }\n\n  const userName = isAuthorized ? user.firstName : 'Guest';\n\n  return (\n    <AppBar position=\"fixed\">\n      <Container>\n        <Toolbar\n          variant=\"dense\"\n          style={{ display: 'flex', justifyContent: 'space-between' }}\n        >\n          <Form style={{ display: 'flex' }} onSubmit={handleSubmit}>\n            <InputLabel htmlFor=\"query\">\n              <Input\n                color=\"primary\"\n                value={values.query}\n                onChange={handleChange}\n                id=\"query\"\n                placeholder=\"Inception\"\n                required={true}\n              />\n            </InputLabel>\n            <Button type=\"submit\">Search</Button>\n          </Form>\n          <div>Welcome, {userName}</div>\n          <div style={{ display: 'flex', alignItems: 'center' }}>\n            <ButtonLink to=\"/movies\">movies</ButtonLink>\n            {isAuthorized ? (\n              <>\n                <ButtonLink to=\"/profile\">Profile</ButtonLink>\n                <ButtonLink to=\"/favorites\">Favorites</ButtonLink>\n                <StyledButton onClick={() => handleLogout()}>\n                  Logout\n                </StyledButton>\n              </>\n            ) : (\n              <ButtonLink to=\"/login\">login</ButtonLink>\n            )}\n          </div>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport Routes from './routes';\nimport Header from './components/header';\nimport { Container } from '@material-ui/core';\nimport { useDispatch } from 'react-redux';\nimport { reAuthRequest } from './modules/user/actions';\nimport { getFavoritesRequest } from './modules/favorites/actions';\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(reAuthRequest());\n    dispatch(getFavoritesRequest());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Header />\n      <Container style={{ marginTop: '100px' }}>\n        <Routes />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import produce from 'immer';\nimport { AnyAction } from 'redux';\nimport { Types, State, Movie } from './types';\n\nconst initialState: State = {\n  data: {\n    page: 0,\n    results: [],\n    total_pages: 0,\n    total_results: 0,\n  },\n  loading: false,\n  error: null,\n  query: '',\n};\n\nconst reducer = (state: State = initialState, action: AnyAction) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case Types.SEARCH_MOVIE_REQUEST:\n        draft.loading = true;\n        draft.error = null;\n        draft.query = action.payload.query;\n        break;\n      case Types.GET_MOVIE_REQUEST:\n      case Types.GET_MOVIES_REQUEST:\n      case Types.FETCH_MORE_REQUEST:\n        draft.loading = true;\n        draft.error = null;\n        break;\n      case Types.SEARCH_MOVIE_SUCCESS:\n        draft.loading = false;\n        draft.data = action.payload.data;\n        break;\n      case Types.GET_MOVIES_SUCCESS: {\n        const { data } = action.payload;\n        draft.loading = false;\n        data.forEach((movie: Movie) => {\n          if (\n            state.data.results.findIndex(\n              (stateMovie: Movie) => stateMovie.id === movie.id\n            ) === -1\n          ) {\n            draft.data.results.push(movie);\n          }\n        });\n        break;\n      }\n      case Types.FETCH_MORE_SUCCESS: {\n        const { data } = action.payload;\n        draft.loading = false;\n        draft.data = {\n          page: data.page,\n          total_pages: data.total_pages,\n          total_results: data.total_results,\n          results: [...state.data.results, ...data.results],\n        };\n        break;\n      }\n      case Types.GET_MOVIE_SUCCESS:\n        const { movie } = action.payload;\n\n        if (\n          state.data.results.findIndex(\n            (stateMovie: Movie) => stateMovie.id === movie.id\n          ) === -1\n        ) {\n          draft.data.results.push(movie);\n        }\n\n        draft.loading = false;\n        break;\n      case Types.GET_MOVIE_FAILURE:\n      case Types.GET_MOVIES_FAILURE:\n      case Types.SEARCH_MOVIE_FAILURE:\n        draft.loading = false;\n        draft.error = action.payload.error;\n        break;\n      default:\n        return state;\n    }\n  });\n\nexport default reducer;\n","import produce from 'immer';\nimport { AnyAction } from 'redux';\nimport { Types, State } from './types';\n\nconst initialState: State = {\n  user: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    gender: '',\n    password: '',\n  },\n  isAuthorized: false,\n  loading: false,\n  error: null,\n};\n\nconst reducer = (state: State = initialState, action: AnyAction) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case Types.SIGNUP_REQUEST:\n      case Types.SIGNIN_REQUEST:\n        draft.loading = true;\n        draft.error = null;\n        break;\n      case Types.SIGNUP_SUCCESS:\n      case Types.SIGNIN_SUCCESS:\n        draft.user = action.payload.user;\n        draft.isAuthorized = true;\n        draft.loading = false;\n        break;\n      case Types.SIGNUP_FAILURE:\n      case Types.SIGNIN_FAILURE:\n        draft.loading = false;\n        draft.error = action.payload.error;\n        break;\n      case Types.LOGOUT:\n        draft.user = initialState.user;\n        draft.isAuthorized = false;\n        break;\n      default:\n        return state;\n    }\n  });\n\nexport default reducer;\n","import produce from 'immer';\nimport { AnyAction } from 'redux';\nimport { Types, State } from './types';\n\nconst initialState: State = {\n  ids: [],\n  loading: false,\n  error: null,\n};\n\nconst reducer = (state: State = initialState, action: AnyAction) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case Types.GET_FAVORITES_REQUEST:\n      case Types.ADD_FAVORITE_REQUEST:\n      case Types.DELETE_FAVORITE_REQUEST:\n        draft.loading = true;\n        draft.error = null;\n        break;\n      case Types.GET_FAVORITES_SUCCESS:\n        draft.loading = false;\n        draft.ids = action.payload.data.map((id: any) => Number(id));\n        break;\n      case Types.ADD_FAVORITE_SUCCESS:\n        draft.loading = false;\n        draft.ids = [...state.ids, Number(action.payload.id)];\n        break;\n      case Types.DELETE_FAVORITE_SUCCESS:\n        draft.loading = false;\n        const filtered = state.ids.filter(\n          (id: number) => id !== action.payload.id\n        );\n        draft.ids = filtered;\n        break;\n      case Types.GET_FAVORITES_FAILURE:\n      case Types.ADD_FAVORITE_FAILURE:\n      case Types.DELETE_FAVORITE_FAILURE:\n        draft.loading = false;\n        draft.error = action.payload.error;\n        break;\n      default:\n        return state;\n    }\n  });\n\nexport default reducer;\n","import { combineReducers } from 'redux';\nimport moviesReducer from './movies/reducer';\nimport userReducer from './user/reducer';\nimport favoritesReducer from './favorites/reducer';\n\nconst reducers = combineReducers({\n  movies: moviesReducer,\n  user: userReducer,\n  favorites: favoritesReducer,\n});\n\nexport type RootState = ReturnType<typeof reducers>;\nexport default reducers;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { configureStore } from './utils/configure-store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../modules/reducers';\n\nexport function configureStore() {\n  let composeEnhancers = compose;\n\n  if (process.env.NODE_ENV !== 'production' && typeof window === 'object') {\n    if ((window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) {\n      composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(\n        {}\n      );\n    }\n  }\n\n  const middlewares = [thunk];\n  const enhancers = [applyMiddleware(...middlewares)];\n  const store = createStore(reducers, composeEnhancers(...enhancers));\n\n  return store;\n}\n"],"sourceRoot":""}